Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SPACE

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statement statements
Rule 3     statements -> statement POINT statements
Rule 4     statements -> empty_statement
Rule 5     empty_statement -> <empty>
Rule 6     statement -> SAI CHE EQUALS variable AS params HEY statements OH
Rule 7     statement -> function_invoke
Rule 8     expression -> function_invoke
Rule 9     function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
Rule 10    params -> variable AND params
Rule 11    params -> variable
Rule 12    params -> EMPTY_PARAM
Rule 13    params_actual -> expression AND params_actual
Rule 14    params_actual -> expression
Rule 15    params_actual -> EMPTY_PARAM
Rule 16    statement -> RETURN expression
Rule 17    statement -> variable EQUALS expression
Rule 18    statement -> boolean_expression QUESTION_MARK statements HEY
Rule 19    statement -> WHILE boolean_expression DO statements HEY
Rule 20    statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY
Rule 21    boolean_expression -> expression COMPARISON expression
Rule 22    boolean_expression -> expression MINOR expression
Rule 23    boolean_expression -> expression MAJOR expression
Rule 24    boolean_expression -> expression NOT COMPARISON expression
Rule 25    boolean_expression -> expression NOT MINOR expression
Rule 26    boolean_expression -> expression NOT MAJOR expression
Rule 27    boolean_expression -> boolean_expression AND boolean_expression
Rule 28    boolean_expression -> boolean_expression OR boolean_expression
Rule 29    expression -> DQUOTE variable DQUOTE
Rule 30    statement -> PRINT expression
Rule 31    expression -> STRING_CAST variable
Rule 32    expression -> MINUS statement
Rule 33    boolean_expression -> TRUE
Rule 34    boolean_expression -> FALSE
Rule 35    expression -> boolean_expression
Rule 36    expression -> numbers
Rule 37    numbers -> DRUG NUMBER
Rule 38    expression -> expression PLUS expression
Rule 39    expression -> expression MINUS expression
Rule 40    expression -> expression TIMES expression
Rule 41    expression -> expression DIVIDE expression
Rule 42    expression -> expression MODULE expression
Rule 43    expression -> variable
Rule 44    variable -> names
Rule 45    variable -> names END_LINE
Rule 46    names -> NAME names
Rule 47    names -> <empty>

Terminals, with rules where they appear

AND                  : 10 13 27
AS                   : 6
CALL                 : 9
CHE                  : 6 9
COMPARISON           : 21 24
DIVIDE               : 41
DO                   : 19
DQUOTE               : 29 29
DRUG                 : 37
ELSE                 : 20
EMPTY_PARAM          : 12 15
END_LINE             : 45
EQUALS               : 6 9 17
EXCLAMATION_MARK     : 9
FALSE                : 34
HEY                  : 6 18 19 20
MAJOR                : 23 26
MINOR                : 22 25
MINUS                : 32 39
MODULE               : 42
NAME                 : 46
NOT                  : 24 25 26
NUMBER               : 37
OH                   : 6
OR                   : 28
PLUS                 : 38
POINT                : 3
PRINT                : 30
QUESTION_MARK        : 18 20
RETURN               : 16
SAI                  : 6
SPACE                : 
STRING_CAST          : 31
TIMES                : 40
TRUE                 : 33
WHILE                : 19
error                : 

Nonterminals, with rules where they appear

boolean_expression   : 18 19 20 27 27 28 28 35
empty_statement      : 4
expression           : 13 14 16 17 21 21 22 22 23 23 24 24 25 25 26 26 30 38 38 39 39 40 40 41 41 42 42
function_invoke      : 7 8
names                : 44 45 46
numbers              : 36
params               : 6 10
params_actual        : 9 13
program              : 0
statement            : 2 3 32
statements           : 1 2 3 6 18 19 20 20
variable             : 6 9 10 11 17 29 31 43

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statement statements
    (3) statements -> . statement POINT statements
    (4) statements -> . empty_statement
    (6) statement -> . SAI CHE EQUALS variable AS params HEY statements OH
    (7) statement -> . function_invoke
    (16) statement -> . RETURN expression
    (17) statement -> . variable EQUALS expression
    (18) statement -> . boolean_expression QUESTION_MARK statements HEY
    (19) statement -> . WHILE boolean_expression DO statements HEY
    (20) statement -> . boolean_expression QUESTION_MARK statements ELSE statements HEY
    (30) statement -> . PRINT expression
    (5) empty_statement -> .
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (46) names -> . NAME names
    (47) names -> .
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (37) numbers -> . DRUG NUMBER

  ! shift/reduce conflict for MINUS resolved as shift
    SAI             shift and go to state 5
    RETURN          shift and go to state 8
    WHILE           shift and go to state 11
    PRINT           shift and go to state 12
    $end            reduce using rule 5 (empty_statement -> .)
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    DRUG            shift and go to state 22

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    empty_statement                shift and go to state 4
    variable                       shift and go to state 6
    function_invoke                shift and go to state 7
    expression                     shift and go to state 9
    boolean_expression             shift and go to state 10
    names                          shift and go to state 14
    numbers                        shift and go to state 21

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .

    $end            reduce using rule 1 (program -> statements .)


state 3

    (2) statements -> statement . statements
    (3) statements -> statement . POINT statements
    (2) statements -> . statement statements
    (3) statements -> . statement POINT statements
    (4) statements -> . empty_statement
    (6) statement -> . SAI CHE EQUALS variable AS params HEY statements OH
    (7) statement -> . function_invoke
    (16) statement -> . RETURN expression
    (17) statement -> . variable EQUALS expression
    (18) statement -> . boolean_expression QUESTION_MARK statements HEY
    (19) statement -> . WHILE boolean_expression DO statements HEY
    (20) statement -> . boolean_expression QUESTION_MARK statements ELSE statements HEY
    (30) statement -> . PRINT expression
    (5) empty_statement -> .
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (46) names -> . NAME names
    (47) names -> .
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (37) numbers -> . DRUG NUMBER

  ! shift/reduce conflict for MINUS resolved as shift
    POINT           shift and go to state 24
    SAI             shift and go to state 5
    RETURN          shift and go to state 8
    WHILE           shift and go to state 11
    PRINT           shift and go to state 12
    $end            reduce using rule 5 (empty_statement -> .)
    HEY             reduce using rule 5 (empty_statement -> .)
    ELSE            reduce using rule 5 (empty_statement -> .)
    OH              reduce using rule 5 (empty_statement -> .)
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    DRUG            shift and go to state 22

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    statement                      shift and go to state 3
    statements                     shift and go to state 23
    empty_statement                shift and go to state 4
    variable                       shift and go to state 6
    function_invoke                shift and go to state 7
    expression                     shift and go to state 9
    boolean_expression             shift and go to state 10
    names                          shift and go to state 14
    numbers                        shift and go to state 21

state 4

    (4) statements -> empty_statement .

    $end            reduce using rule 4 (statements -> empty_statement .)
    HEY             reduce using rule 4 (statements -> empty_statement .)
    ELSE            reduce using rule 4 (statements -> empty_statement .)
    OH              reduce using rule 4 (statements -> empty_statement .)


state 5

    (6) statement -> SAI . CHE EQUALS variable AS params HEY statements OH

    CHE             shift and go to state 25


state 6

    (17) statement -> variable . EQUALS expression
    (43) expression -> variable .

    EQUALS          shift and go to state 26
    COMPARISON      reduce using rule 43 (expression -> variable .)
    MINOR           reduce using rule 43 (expression -> variable .)
    MAJOR           reduce using rule 43 (expression -> variable .)
    NOT             reduce using rule 43 (expression -> variable .)
    PLUS            reduce using rule 43 (expression -> variable .)
    MINUS           reduce using rule 43 (expression -> variable .)
    TIMES           reduce using rule 43 (expression -> variable .)
    DIVIDE          reduce using rule 43 (expression -> variable .)
    MODULE          reduce using rule 43 (expression -> variable .)


state 7

    (7) statement -> function_invoke .
    (8) expression -> function_invoke .

  ! reduce/reduce conflict for COMPARISON resolved using rule 7 (statement -> function_invoke .)
  ! reduce/reduce conflict for MINOR resolved using rule 7 (statement -> function_invoke .)
  ! reduce/reduce conflict for MAJOR resolved using rule 7 (statement -> function_invoke .)
  ! reduce/reduce conflict for NOT resolved using rule 7 (statement -> function_invoke .)
  ! reduce/reduce conflict for PLUS resolved using rule 7 (statement -> function_invoke .)
  ! reduce/reduce conflict for MINUS resolved using rule 7 (statement -> function_invoke .)
  ! reduce/reduce conflict for TIMES resolved using rule 7 (statement -> function_invoke .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 7 (statement -> function_invoke .)
  ! reduce/reduce conflict for MODULE resolved using rule 7 (statement -> function_invoke .)
    POINT           reduce using rule 7 (statement -> function_invoke .)
    SAI             reduce using rule 7 (statement -> function_invoke .)
    RETURN          reduce using rule 7 (statement -> function_invoke .)
    WHILE           reduce using rule 7 (statement -> function_invoke .)
    PRINT           reduce using rule 7 (statement -> function_invoke .)
    CALL            reduce using rule 7 (statement -> function_invoke .)
    TRUE            reduce using rule 7 (statement -> function_invoke .)
    FALSE           reduce using rule 7 (statement -> function_invoke .)
    NAME            reduce using rule 7 (statement -> function_invoke .)
    DQUOTE          reduce using rule 7 (statement -> function_invoke .)
    STRING_CAST     reduce using rule 7 (statement -> function_invoke .)
    MINUS           reduce using rule 7 (statement -> function_invoke .)
    DRUG            reduce using rule 7 (statement -> function_invoke .)
    EQUALS          reduce using rule 7 (statement -> function_invoke .)
    END_LINE        reduce using rule 7 (statement -> function_invoke .)
    COMPARISON      reduce using rule 7 (statement -> function_invoke .)
    MINOR           reduce using rule 7 (statement -> function_invoke .)
    MAJOR           reduce using rule 7 (statement -> function_invoke .)
    NOT             reduce using rule 7 (statement -> function_invoke .)
    PLUS            reduce using rule 7 (statement -> function_invoke .)
    TIMES           reduce using rule 7 (statement -> function_invoke .)
    DIVIDE          reduce using rule 7 (statement -> function_invoke .)
    MODULE          reduce using rule 7 (statement -> function_invoke .)
    $end            reduce using rule 7 (statement -> function_invoke .)
    HEY             reduce using rule 7 (statement -> function_invoke .)
    ELSE            reduce using rule 7 (statement -> function_invoke .)
    OH              reduce using rule 7 (statement -> function_invoke .)
    QUESTION_MARK   reduce using rule 7 (statement -> function_invoke .)
    AND             reduce using rule 7 (statement -> function_invoke .)
    OR              reduce using rule 7 (statement -> function_invoke .)
    DO              reduce using rule 7 (statement -> function_invoke .)
    EXCLAMATION_MARK reduce using rule 7 (statement -> function_invoke .)

  ! COMPARISON      [ reduce using rule 8 (expression -> function_invoke .) ]
  ! MINOR           [ reduce using rule 8 (expression -> function_invoke .) ]
  ! MAJOR           [ reduce using rule 8 (expression -> function_invoke .) ]
  ! NOT             [ reduce using rule 8 (expression -> function_invoke .) ]
  ! PLUS            [ reduce using rule 8 (expression -> function_invoke .) ]
  ! MINUS           [ reduce using rule 8 (expression -> function_invoke .) ]
  ! TIMES           [ reduce using rule 8 (expression -> function_invoke .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> function_invoke .) ]
  ! MODULE          [ reduce using rule 8 (expression -> function_invoke .) ]


state 8

    (16) statement -> RETURN . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 27
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 9

    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression

    COMPARISON      shift and go to state 31
    MINOR           shift and go to state 32
    MAJOR           shift and go to state 33
    NOT             shift and go to state 34
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39


state 10

    (18) statement -> boolean_expression . QUESTION_MARK statements HEY
    (20) statement -> boolean_expression . QUESTION_MARK statements ELSE statements HEY
    (27) boolean_expression -> boolean_expression . AND boolean_expression
    (28) boolean_expression -> boolean_expression . OR boolean_expression
    (35) expression -> boolean_expression .

    QUESTION_MARK   shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    COMPARISON      reduce using rule 35 (expression -> boolean_expression .)
    MINOR           reduce using rule 35 (expression -> boolean_expression .)
    MAJOR           reduce using rule 35 (expression -> boolean_expression .)
    NOT             reduce using rule 35 (expression -> boolean_expression .)
    PLUS            reduce using rule 35 (expression -> boolean_expression .)
    MINUS           reduce using rule 35 (expression -> boolean_expression .)
    TIMES           reduce using rule 35 (expression -> boolean_expression .)
    DIVIDE          reduce using rule 35 (expression -> boolean_expression .)
    MODULE          reduce using rule 35 (expression -> boolean_expression .)


state 11

    (19) statement -> WHILE . boolean_expression DO statements HEY
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    boolean_expression             shift and go to state 43
    expression                     shift and go to state 9
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 12

    (30) statement -> PRINT . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 44
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 13

    (9) function_invoke -> CALL . variable CHE EQUALS params_actual EXCLAMATION_MARK
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    CHE             reduce using rule 47 (names -> .)

    variable                       shift and go to state 45
    names                          shift and go to state 14

state 14

    (44) variable -> names .
    (45) variable -> names . END_LINE

  ! shift/reduce conflict for END_LINE resolved as shift
    EQUALS          reduce using rule 44 (variable -> names .)
    COMPARISON      reduce using rule 44 (variable -> names .)
    MINOR           reduce using rule 44 (variable -> names .)
    MAJOR           reduce using rule 44 (variable -> names .)
    NOT             reduce using rule 44 (variable -> names .)
    PLUS            reduce using rule 44 (variable -> names .)
    MINUS           reduce using rule 44 (variable -> names .)
    TIMES           reduce using rule 44 (variable -> names .)
    DIVIDE          reduce using rule 44 (variable -> names .)
    MODULE          reduce using rule 44 (variable -> names .)
    POINT           reduce using rule 44 (variable -> names .)
    SAI             reduce using rule 44 (variable -> names .)
    RETURN          reduce using rule 44 (variable -> names .)
    WHILE           reduce using rule 44 (variable -> names .)
    PRINT           reduce using rule 44 (variable -> names .)
    CALL            reduce using rule 44 (variable -> names .)
    TRUE            reduce using rule 44 (variable -> names .)
    FALSE           reduce using rule 44 (variable -> names .)
    NAME            reduce using rule 44 (variable -> names .)
    DQUOTE          reduce using rule 44 (variable -> names .)
    STRING_CAST     reduce using rule 44 (variable -> names .)
    DRUG            reduce using rule 44 (variable -> names .)
    $end            reduce using rule 44 (variable -> names .)
    HEY             reduce using rule 44 (variable -> names .)
    ELSE            reduce using rule 44 (variable -> names .)
    OH              reduce using rule 44 (variable -> names .)
    QUESTION_MARK   reduce using rule 44 (variable -> names .)
    AND             reduce using rule 44 (variable -> names .)
    OR              reduce using rule 44 (variable -> names .)
    DO              reduce using rule 44 (variable -> names .)
    EXCLAMATION_MARK reduce using rule 44 (variable -> names .)
    CHE             reduce using rule 44 (variable -> names .)
    AS              reduce using rule 44 (variable -> names .)
    END_LINE        shift and go to state 46

  ! END_LINE        [ reduce using rule 44 (variable -> names .) ]


state 15

    (33) boolean_expression -> TRUE .

    QUESTION_MARK   reduce using rule 33 (boolean_expression -> TRUE .)
    AND             reduce using rule 33 (boolean_expression -> TRUE .)
    OR              reduce using rule 33 (boolean_expression -> TRUE .)
    COMPARISON      reduce using rule 33 (boolean_expression -> TRUE .)
    MINOR           reduce using rule 33 (boolean_expression -> TRUE .)
    MAJOR           reduce using rule 33 (boolean_expression -> TRUE .)
    NOT             reduce using rule 33 (boolean_expression -> TRUE .)
    PLUS            reduce using rule 33 (boolean_expression -> TRUE .)
    MINUS           reduce using rule 33 (boolean_expression -> TRUE .)
    TIMES           reduce using rule 33 (boolean_expression -> TRUE .)
    DIVIDE          reduce using rule 33 (boolean_expression -> TRUE .)
    MODULE          reduce using rule 33 (boolean_expression -> TRUE .)
    POINT           reduce using rule 33 (boolean_expression -> TRUE .)
    SAI             reduce using rule 33 (boolean_expression -> TRUE .)
    RETURN          reduce using rule 33 (boolean_expression -> TRUE .)
    WHILE           reduce using rule 33 (boolean_expression -> TRUE .)
    PRINT           reduce using rule 33 (boolean_expression -> TRUE .)
    CALL            reduce using rule 33 (boolean_expression -> TRUE .)
    TRUE            reduce using rule 33 (boolean_expression -> TRUE .)
    FALSE           reduce using rule 33 (boolean_expression -> TRUE .)
    NAME            reduce using rule 33 (boolean_expression -> TRUE .)
    DQUOTE          reduce using rule 33 (boolean_expression -> TRUE .)
    STRING_CAST     reduce using rule 33 (boolean_expression -> TRUE .)
    DRUG            reduce using rule 33 (boolean_expression -> TRUE .)
    EQUALS          reduce using rule 33 (boolean_expression -> TRUE .)
    END_LINE        reduce using rule 33 (boolean_expression -> TRUE .)
    $end            reduce using rule 33 (boolean_expression -> TRUE .)
    HEY             reduce using rule 33 (boolean_expression -> TRUE .)
    ELSE            reduce using rule 33 (boolean_expression -> TRUE .)
    OH              reduce using rule 33 (boolean_expression -> TRUE .)
    DO              reduce using rule 33 (boolean_expression -> TRUE .)
    EXCLAMATION_MARK reduce using rule 33 (boolean_expression -> TRUE .)


state 16

    (34) boolean_expression -> FALSE .

    QUESTION_MARK   reduce using rule 34 (boolean_expression -> FALSE .)
    AND             reduce using rule 34 (boolean_expression -> FALSE .)
    OR              reduce using rule 34 (boolean_expression -> FALSE .)
    COMPARISON      reduce using rule 34 (boolean_expression -> FALSE .)
    MINOR           reduce using rule 34 (boolean_expression -> FALSE .)
    MAJOR           reduce using rule 34 (boolean_expression -> FALSE .)
    NOT             reduce using rule 34 (boolean_expression -> FALSE .)
    PLUS            reduce using rule 34 (boolean_expression -> FALSE .)
    MINUS           reduce using rule 34 (boolean_expression -> FALSE .)
    TIMES           reduce using rule 34 (boolean_expression -> FALSE .)
    DIVIDE          reduce using rule 34 (boolean_expression -> FALSE .)
    MODULE          reduce using rule 34 (boolean_expression -> FALSE .)
    POINT           reduce using rule 34 (boolean_expression -> FALSE .)
    SAI             reduce using rule 34 (boolean_expression -> FALSE .)
    RETURN          reduce using rule 34 (boolean_expression -> FALSE .)
    WHILE           reduce using rule 34 (boolean_expression -> FALSE .)
    PRINT           reduce using rule 34 (boolean_expression -> FALSE .)
    CALL            reduce using rule 34 (boolean_expression -> FALSE .)
    TRUE            reduce using rule 34 (boolean_expression -> FALSE .)
    FALSE           reduce using rule 34 (boolean_expression -> FALSE .)
    NAME            reduce using rule 34 (boolean_expression -> FALSE .)
    DQUOTE          reduce using rule 34 (boolean_expression -> FALSE .)
    STRING_CAST     reduce using rule 34 (boolean_expression -> FALSE .)
    DRUG            reduce using rule 34 (boolean_expression -> FALSE .)
    EQUALS          reduce using rule 34 (boolean_expression -> FALSE .)
    END_LINE        reduce using rule 34 (boolean_expression -> FALSE .)
    $end            reduce using rule 34 (boolean_expression -> FALSE .)
    HEY             reduce using rule 34 (boolean_expression -> FALSE .)
    ELSE            reduce using rule 34 (boolean_expression -> FALSE .)
    OH              reduce using rule 34 (boolean_expression -> FALSE .)
    DO              reduce using rule 34 (boolean_expression -> FALSE .)
    EXCLAMATION_MARK reduce using rule 34 (boolean_expression -> FALSE .)


state 17

    (46) names -> NAME . names
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for NAME resolved as shift
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    MINUS           reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    CALL            reduce using rule 47 (names -> .)
    TRUE            reduce using rule 47 (names -> .)
    FALSE           reduce using rule 47 (names -> .)
    DQUOTE          reduce using rule 47 (names -> .)
    STRING_CAST     reduce using rule 47 (names -> .)
    DRUG            reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)
    CHE             reduce using rule 47 (names -> .)
    AS              reduce using rule 47 (names -> .)

  ! NAME            [ reduce using rule 47 (names -> .) ]

    names                          shift and go to state 47

state 18

    (29) expression -> DQUOTE . variable DQUOTE
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    DQUOTE          reduce using rule 47 (names -> .)

    variable                       shift and go to state 48
    names                          shift and go to state 14

state 19

    (31) expression -> STRING_CAST . variable
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for NAME resolved as shift
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    MINUS           reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    CALL            reduce using rule 47 (names -> .)
    TRUE            reduce using rule 47 (names -> .)
    FALSE           reduce using rule 47 (names -> .)
    DQUOTE          reduce using rule 47 (names -> .)
    STRING_CAST     reduce using rule 47 (names -> .)
    DRUG            reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! NAME            [ reduce using rule 47 (names -> .) ]

    variable                       shift and go to state 49
    names                          shift and go to state 14

state 20

    (32) expression -> MINUS . statement
    (6) statement -> . SAI CHE EQUALS variable AS params HEY statements OH
    (7) statement -> . function_invoke
    (16) statement -> . RETURN expression
    (17) statement -> . variable EQUALS expression
    (18) statement -> . boolean_expression QUESTION_MARK statements HEY
    (19) statement -> . WHILE boolean_expression DO statements HEY
    (20) statement -> . boolean_expression QUESTION_MARK statements ELSE statements HEY
    (30) statement -> . PRINT expression
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (46) names -> . NAME names
    (47) names -> .
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (37) numbers -> . DRUG NUMBER

  ! shift/reduce conflict for MINUS resolved as shift
    SAI             shift and go to state 5
    RETURN          shift and go to state 8
    WHILE           shift and go to state 11
    PRINT           shift and go to state 12
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    DRUG            shift and go to state 22

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    statement                      shift and go to state 50
    variable                       shift and go to state 6
    function_invoke                shift and go to state 7
    expression                     shift and go to state 9
    boolean_expression             shift and go to state 10
    names                          shift and go to state 14
    numbers                        shift and go to state 21

state 21

    (36) expression -> numbers .

    COMPARISON      reduce using rule 36 (expression -> numbers .)
    MINOR           reduce using rule 36 (expression -> numbers .)
    MAJOR           reduce using rule 36 (expression -> numbers .)
    NOT             reduce using rule 36 (expression -> numbers .)
    PLUS            reduce using rule 36 (expression -> numbers .)
    MINUS           reduce using rule 36 (expression -> numbers .)
    TIMES           reduce using rule 36 (expression -> numbers .)
    DIVIDE          reduce using rule 36 (expression -> numbers .)
    MODULE          reduce using rule 36 (expression -> numbers .)
    POINT           reduce using rule 36 (expression -> numbers .)
    SAI             reduce using rule 36 (expression -> numbers .)
    RETURN          reduce using rule 36 (expression -> numbers .)
    WHILE           reduce using rule 36 (expression -> numbers .)
    PRINT           reduce using rule 36 (expression -> numbers .)
    CALL            reduce using rule 36 (expression -> numbers .)
    TRUE            reduce using rule 36 (expression -> numbers .)
    FALSE           reduce using rule 36 (expression -> numbers .)
    NAME            reduce using rule 36 (expression -> numbers .)
    DQUOTE          reduce using rule 36 (expression -> numbers .)
    STRING_CAST     reduce using rule 36 (expression -> numbers .)
    DRUG            reduce using rule 36 (expression -> numbers .)
    EQUALS          reduce using rule 36 (expression -> numbers .)
    END_LINE        reduce using rule 36 (expression -> numbers .)
    $end            reduce using rule 36 (expression -> numbers .)
    HEY             reduce using rule 36 (expression -> numbers .)
    ELSE            reduce using rule 36 (expression -> numbers .)
    OH              reduce using rule 36 (expression -> numbers .)
    QUESTION_MARK   reduce using rule 36 (expression -> numbers .)
    AND             reduce using rule 36 (expression -> numbers .)
    OR              reduce using rule 36 (expression -> numbers .)
    DO              reduce using rule 36 (expression -> numbers .)
    EXCLAMATION_MARK reduce using rule 36 (expression -> numbers .)


state 22

    (37) numbers -> DRUG . NUMBER

    NUMBER          shift and go to state 51


state 23

    (2) statements -> statement statements .

    $end            reduce using rule 2 (statements -> statement statements .)
    HEY             reduce using rule 2 (statements -> statement statements .)
    ELSE            reduce using rule 2 (statements -> statement statements .)
    OH              reduce using rule 2 (statements -> statement statements .)


state 24

    (3) statements -> statement POINT . statements
    (2) statements -> . statement statements
    (3) statements -> . statement POINT statements
    (4) statements -> . empty_statement
    (6) statement -> . SAI CHE EQUALS variable AS params HEY statements OH
    (7) statement -> . function_invoke
    (16) statement -> . RETURN expression
    (17) statement -> . variable EQUALS expression
    (18) statement -> . boolean_expression QUESTION_MARK statements HEY
    (19) statement -> . WHILE boolean_expression DO statements HEY
    (20) statement -> . boolean_expression QUESTION_MARK statements ELSE statements HEY
    (30) statement -> . PRINT expression
    (5) empty_statement -> .
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (46) names -> . NAME names
    (47) names -> .
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (37) numbers -> . DRUG NUMBER

  ! shift/reduce conflict for MINUS resolved as shift
    SAI             shift and go to state 5
    RETURN          shift and go to state 8
    WHILE           shift and go to state 11
    PRINT           shift and go to state 12
    $end            reduce using rule 5 (empty_statement -> .)
    HEY             reduce using rule 5 (empty_statement -> .)
    ELSE            reduce using rule 5 (empty_statement -> .)
    OH              reduce using rule 5 (empty_statement -> .)
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    DRUG            shift and go to state 22

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    statement                      shift and go to state 3
    statements                     shift and go to state 52
    empty_statement                shift and go to state 4
    variable                       shift and go to state 6
    function_invoke                shift and go to state 7
    expression                     shift and go to state 9
    boolean_expression             shift and go to state 10
    names                          shift and go to state 14
    numbers                        shift and go to state 21

state 25

    (6) statement -> SAI CHE . EQUALS variable AS params HEY statements OH

    EQUALS          shift and go to state 53


state 26

    (17) statement -> variable EQUALS . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    variable                       shift and go to state 29
    expression                     shift and go to state 54
    function_invoke                shift and go to state 28
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 27

    (16) statement -> RETURN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for MINOR resolved as shift
  ! shift/reduce conflict for MAJOR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    POINT           reduce using rule 16 (statement -> RETURN expression .)
    SAI             reduce using rule 16 (statement -> RETURN expression .)
    RETURN          reduce using rule 16 (statement -> RETURN expression .)
    WHILE           reduce using rule 16 (statement -> RETURN expression .)
    PRINT           reduce using rule 16 (statement -> RETURN expression .)
    CALL            reduce using rule 16 (statement -> RETURN expression .)
    TRUE            reduce using rule 16 (statement -> RETURN expression .)
    FALSE           reduce using rule 16 (statement -> RETURN expression .)
    NAME            reduce using rule 16 (statement -> RETURN expression .)
    DQUOTE          reduce using rule 16 (statement -> RETURN expression .)
    STRING_CAST     reduce using rule 16 (statement -> RETURN expression .)
    DRUG            reduce using rule 16 (statement -> RETURN expression .)
    EQUALS          reduce using rule 16 (statement -> RETURN expression .)
    END_LINE        reduce using rule 16 (statement -> RETURN expression .)
    $end            reduce using rule 16 (statement -> RETURN expression .)
    HEY             reduce using rule 16 (statement -> RETURN expression .)
    ELSE            reduce using rule 16 (statement -> RETURN expression .)
    OH              reduce using rule 16 (statement -> RETURN expression .)
    QUESTION_MARK   reduce using rule 16 (statement -> RETURN expression .)
    AND             reduce using rule 16 (statement -> RETURN expression .)
    OR              reduce using rule 16 (statement -> RETURN expression .)
    DO              reduce using rule 16 (statement -> RETURN expression .)
    EXCLAMATION_MARK reduce using rule 16 (statement -> RETURN expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39
    COMPARISON      shift and go to state 31
    MINOR           shift and go to state 32
    MAJOR           shift and go to state 33
    NOT             shift and go to state 34

  ! MINUS           [ reduce using rule 16 (statement -> RETURN expression .) ]
  ! COMPARISON      [ reduce using rule 16 (statement -> RETURN expression .) ]
  ! MINOR           [ reduce using rule 16 (statement -> RETURN expression .) ]
  ! MAJOR           [ reduce using rule 16 (statement -> RETURN expression .) ]
  ! NOT             [ reduce using rule 16 (statement -> RETURN expression .) ]
  ! PLUS            [ reduce using rule 16 (statement -> RETURN expression .) ]
  ! TIMES           [ reduce using rule 16 (statement -> RETURN expression .) ]
  ! DIVIDE          [ reduce using rule 16 (statement -> RETURN expression .) ]
  ! MODULE          [ reduce using rule 16 (statement -> RETURN expression .) ]


state 28

    (8) expression -> function_invoke .

    PLUS            reduce using rule 8 (expression -> function_invoke .)
    MINUS           reduce using rule 8 (expression -> function_invoke .)
    TIMES           reduce using rule 8 (expression -> function_invoke .)
    DIVIDE          reduce using rule 8 (expression -> function_invoke .)
    MODULE          reduce using rule 8 (expression -> function_invoke .)
    COMPARISON      reduce using rule 8 (expression -> function_invoke .)
    MINOR           reduce using rule 8 (expression -> function_invoke .)
    MAJOR           reduce using rule 8 (expression -> function_invoke .)
    NOT             reduce using rule 8 (expression -> function_invoke .)
    POINT           reduce using rule 8 (expression -> function_invoke .)
    SAI             reduce using rule 8 (expression -> function_invoke .)
    RETURN          reduce using rule 8 (expression -> function_invoke .)
    WHILE           reduce using rule 8 (expression -> function_invoke .)
    PRINT           reduce using rule 8 (expression -> function_invoke .)
    CALL            reduce using rule 8 (expression -> function_invoke .)
    TRUE            reduce using rule 8 (expression -> function_invoke .)
    FALSE           reduce using rule 8 (expression -> function_invoke .)
    NAME            reduce using rule 8 (expression -> function_invoke .)
    DQUOTE          reduce using rule 8 (expression -> function_invoke .)
    STRING_CAST     reduce using rule 8 (expression -> function_invoke .)
    DRUG            reduce using rule 8 (expression -> function_invoke .)
    EQUALS          reduce using rule 8 (expression -> function_invoke .)
    END_LINE        reduce using rule 8 (expression -> function_invoke .)
    $end            reduce using rule 8 (expression -> function_invoke .)
    HEY             reduce using rule 8 (expression -> function_invoke .)
    ELSE            reduce using rule 8 (expression -> function_invoke .)
    OH              reduce using rule 8 (expression -> function_invoke .)
    QUESTION_MARK   reduce using rule 8 (expression -> function_invoke .)
    AND             reduce using rule 8 (expression -> function_invoke .)
    OR              reduce using rule 8 (expression -> function_invoke .)
    DO              reduce using rule 8 (expression -> function_invoke .)
    EXCLAMATION_MARK reduce using rule 8 (expression -> function_invoke .)


state 29

    (43) expression -> variable .

    PLUS            reduce using rule 43 (expression -> variable .)
    MINUS           reduce using rule 43 (expression -> variable .)
    TIMES           reduce using rule 43 (expression -> variable .)
    DIVIDE          reduce using rule 43 (expression -> variable .)
    MODULE          reduce using rule 43 (expression -> variable .)
    COMPARISON      reduce using rule 43 (expression -> variable .)
    MINOR           reduce using rule 43 (expression -> variable .)
    MAJOR           reduce using rule 43 (expression -> variable .)
    NOT             reduce using rule 43 (expression -> variable .)
    POINT           reduce using rule 43 (expression -> variable .)
    SAI             reduce using rule 43 (expression -> variable .)
    RETURN          reduce using rule 43 (expression -> variable .)
    WHILE           reduce using rule 43 (expression -> variable .)
    PRINT           reduce using rule 43 (expression -> variable .)
    CALL            reduce using rule 43 (expression -> variable .)
    TRUE            reduce using rule 43 (expression -> variable .)
    FALSE           reduce using rule 43 (expression -> variable .)
    NAME            reduce using rule 43 (expression -> variable .)
    DQUOTE          reduce using rule 43 (expression -> variable .)
    STRING_CAST     reduce using rule 43 (expression -> variable .)
    DRUG            reduce using rule 43 (expression -> variable .)
    EQUALS          reduce using rule 43 (expression -> variable .)
    END_LINE        reduce using rule 43 (expression -> variable .)
    $end            reduce using rule 43 (expression -> variable .)
    HEY             reduce using rule 43 (expression -> variable .)
    ELSE            reduce using rule 43 (expression -> variable .)
    OH              reduce using rule 43 (expression -> variable .)
    QUESTION_MARK   reduce using rule 43 (expression -> variable .)
    AND             reduce using rule 43 (expression -> variable .)
    OR              reduce using rule 43 (expression -> variable .)
    DO              reduce using rule 43 (expression -> variable .)
    EXCLAMATION_MARK reduce using rule 43 (expression -> variable .)


state 30

    (35) expression -> boolean_expression .
    (27) boolean_expression -> boolean_expression . AND boolean_expression
    (28) boolean_expression -> boolean_expression . OR boolean_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PLUS            reduce using rule 35 (expression -> boolean_expression .)
    MINUS           reduce using rule 35 (expression -> boolean_expression .)
    TIMES           reduce using rule 35 (expression -> boolean_expression .)
    DIVIDE          reduce using rule 35 (expression -> boolean_expression .)
    MODULE          reduce using rule 35 (expression -> boolean_expression .)
    COMPARISON      reduce using rule 35 (expression -> boolean_expression .)
    MINOR           reduce using rule 35 (expression -> boolean_expression .)
    MAJOR           reduce using rule 35 (expression -> boolean_expression .)
    NOT             reduce using rule 35 (expression -> boolean_expression .)
    POINT           reduce using rule 35 (expression -> boolean_expression .)
    SAI             reduce using rule 35 (expression -> boolean_expression .)
    RETURN          reduce using rule 35 (expression -> boolean_expression .)
    WHILE           reduce using rule 35 (expression -> boolean_expression .)
    PRINT           reduce using rule 35 (expression -> boolean_expression .)
    CALL            reduce using rule 35 (expression -> boolean_expression .)
    TRUE            reduce using rule 35 (expression -> boolean_expression .)
    FALSE           reduce using rule 35 (expression -> boolean_expression .)
    NAME            reduce using rule 35 (expression -> boolean_expression .)
    DQUOTE          reduce using rule 35 (expression -> boolean_expression .)
    STRING_CAST     reduce using rule 35 (expression -> boolean_expression .)
    DRUG            reduce using rule 35 (expression -> boolean_expression .)
    EQUALS          reduce using rule 35 (expression -> boolean_expression .)
    END_LINE        reduce using rule 35 (expression -> boolean_expression .)
    $end            reduce using rule 35 (expression -> boolean_expression .)
    HEY             reduce using rule 35 (expression -> boolean_expression .)
    ELSE            reduce using rule 35 (expression -> boolean_expression .)
    OH              reduce using rule 35 (expression -> boolean_expression .)
    QUESTION_MARK   reduce using rule 35 (expression -> boolean_expression .)
    DO              reduce using rule 35 (expression -> boolean_expression .)
    EXCLAMATION_MARK reduce using rule 35 (expression -> boolean_expression .)
    AND             shift and go to state 41
    OR              shift and go to state 42

  ! AND             [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! OR              [ reduce using rule 35 (expression -> boolean_expression .) ]


state 31

    (21) boolean_expression -> expression COMPARISON . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 55
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 32

    (22) boolean_expression -> expression MINOR . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 56
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 33

    (23) boolean_expression -> expression MAJOR . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 57
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 34

    (24) boolean_expression -> expression NOT . COMPARISON expression
    (25) boolean_expression -> expression NOT . MINOR expression
    (26) boolean_expression -> expression NOT . MAJOR expression

    COMPARISON      shift and go to state 58
    MINOR           shift and go to state 59
    MAJOR           shift and go to state 60


state 35

    (38) expression -> expression PLUS . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 61
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 36

    (39) expression -> expression MINUS . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 62
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 37

    (40) expression -> expression TIMES . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 63
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 38

    (41) expression -> expression DIVIDE . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 64
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 39

    (42) expression -> expression MODULE . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 65
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 40

    (18) statement -> boolean_expression QUESTION_MARK . statements HEY
    (20) statement -> boolean_expression QUESTION_MARK . statements ELSE statements HEY
    (2) statements -> . statement statements
    (3) statements -> . statement POINT statements
    (4) statements -> . empty_statement
    (6) statement -> . SAI CHE EQUALS variable AS params HEY statements OH
    (7) statement -> . function_invoke
    (16) statement -> . RETURN expression
    (17) statement -> . variable EQUALS expression
    (18) statement -> . boolean_expression QUESTION_MARK statements HEY
    (19) statement -> . WHILE boolean_expression DO statements HEY
    (20) statement -> . boolean_expression QUESTION_MARK statements ELSE statements HEY
    (30) statement -> . PRINT expression
    (5) empty_statement -> .
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (46) names -> . NAME names
    (47) names -> .
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (37) numbers -> . DRUG NUMBER

  ! shift/reduce conflict for MINUS resolved as shift
    SAI             shift and go to state 5
    RETURN          shift and go to state 8
    WHILE           shift and go to state 11
    PRINT           shift and go to state 12
    HEY             reduce using rule 5 (empty_statement -> .)
    ELSE            reduce using rule 5 (empty_statement -> .)
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    DRUG            shift and go to state 22

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    boolean_expression             shift and go to state 10
    statements                     shift and go to state 66
    statement                      shift and go to state 3
    empty_statement                shift and go to state 4
    variable                       shift and go to state 6
    function_invoke                shift and go to state 7
    expression                     shift and go to state 9
    names                          shift and go to state 14
    numbers                        shift and go to state 21

state 41

    (27) boolean_expression -> boolean_expression AND . boolean_expression
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    boolean_expression             shift and go to state 67
    expression                     shift and go to state 9
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 42

    (28) boolean_expression -> boolean_expression OR . boolean_expression
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    boolean_expression             shift and go to state 68
    expression                     shift and go to state 9
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 43

    (19) statement -> WHILE boolean_expression . DO statements HEY
    (27) boolean_expression -> boolean_expression . AND boolean_expression
    (28) boolean_expression -> boolean_expression . OR boolean_expression
    (35) expression -> boolean_expression .

    DO              shift and go to state 69
    AND             shift and go to state 41
    OR              shift and go to state 42
    COMPARISON      reduce using rule 35 (expression -> boolean_expression .)
    MINOR           reduce using rule 35 (expression -> boolean_expression .)
    MAJOR           reduce using rule 35 (expression -> boolean_expression .)
    NOT             reduce using rule 35 (expression -> boolean_expression .)
    PLUS            reduce using rule 35 (expression -> boolean_expression .)
    MINUS           reduce using rule 35 (expression -> boolean_expression .)
    TIMES           reduce using rule 35 (expression -> boolean_expression .)
    DIVIDE          reduce using rule 35 (expression -> boolean_expression .)
    MODULE          reduce using rule 35 (expression -> boolean_expression .)


state 44

    (30) statement -> PRINT expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for MINOR resolved as shift
  ! shift/reduce conflict for MAJOR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    POINT           reduce using rule 30 (statement -> PRINT expression .)
    SAI             reduce using rule 30 (statement -> PRINT expression .)
    RETURN          reduce using rule 30 (statement -> PRINT expression .)
    WHILE           reduce using rule 30 (statement -> PRINT expression .)
    PRINT           reduce using rule 30 (statement -> PRINT expression .)
    CALL            reduce using rule 30 (statement -> PRINT expression .)
    TRUE            reduce using rule 30 (statement -> PRINT expression .)
    FALSE           reduce using rule 30 (statement -> PRINT expression .)
    NAME            reduce using rule 30 (statement -> PRINT expression .)
    DQUOTE          reduce using rule 30 (statement -> PRINT expression .)
    STRING_CAST     reduce using rule 30 (statement -> PRINT expression .)
    DRUG            reduce using rule 30 (statement -> PRINT expression .)
    EQUALS          reduce using rule 30 (statement -> PRINT expression .)
    END_LINE        reduce using rule 30 (statement -> PRINT expression .)
    $end            reduce using rule 30 (statement -> PRINT expression .)
    HEY             reduce using rule 30 (statement -> PRINT expression .)
    ELSE            reduce using rule 30 (statement -> PRINT expression .)
    OH              reduce using rule 30 (statement -> PRINT expression .)
    QUESTION_MARK   reduce using rule 30 (statement -> PRINT expression .)
    AND             reduce using rule 30 (statement -> PRINT expression .)
    OR              reduce using rule 30 (statement -> PRINT expression .)
    DO              reduce using rule 30 (statement -> PRINT expression .)
    EXCLAMATION_MARK reduce using rule 30 (statement -> PRINT expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39
    COMPARISON      shift and go to state 31
    MINOR           shift and go to state 32
    MAJOR           shift and go to state 33
    NOT             shift and go to state 34

  ! MINUS           [ reduce using rule 30 (statement -> PRINT expression .) ]
  ! COMPARISON      [ reduce using rule 30 (statement -> PRINT expression .) ]
  ! MINOR           [ reduce using rule 30 (statement -> PRINT expression .) ]
  ! MAJOR           [ reduce using rule 30 (statement -> PRINT expression .) ]
  ! NOT             [ reduce using rule 30 (statement -> PRINT expression .) ]
  ! PLUS            [ reduce using rule 30 (statement -> PRINT expression .) ]
  ! TIMES           [ reduce using rule 30 (statement -> PRINT expression .) ]
  ! DIVIDE          [ reduce using rule 30 (statement -> PRINT expression .) ]
  ! MODULE          [ reduce using rule 30 (statement -> PRINT expression .) ]


state 45

    (9) function_invoke -> CALL variable . CHE EQUALS params_actual EXCLAMATION_MARK

    CHE             shift and go to state 70


state 46

    (45) variable -> names END_LINE .

    EQUALS          reduce using rule 45 (variable -> names END_LINE .)
    COMPARISON      reduce using rule 45 (variable -> names END_LINE .)
    MINOR           reduce using rule 45 (variable -> names END_LINE .)
    MAJOR           reduce using rule 45 (variable -> names END_LINE .)
    NOT             reduce using rule 45 (variable -> names END_LINE .)
    PLUS            reduce using rule 45 (variable -> names END_LINE .)
    MINUS           reduce using rule 45 (variable -> names END_LINE .)
    TIMES           reduce using rule 45 (variable -> names END_LINE .)
    DIVIDE          reduce using rule 45 (variable -> names END_LINE .)
    MODULE          reduce using rule 45 (variable -> names END_LINE .)
    POINT           reduce using rule 45 (variable -> names END_LINE .)
    SAI             reduce using rule 45 (variable -> names END_LINE .)
    RETURN          reduce using rule 45 (variable -> names END_LINE .)
    WHILE           reduce using rule 45 (variable -> names END_LINE .)
    PRINT           reduce using rule 45 (variable -> names END_LINE .)
    CALL            reduce using rule 45 (variable -> names END_LINE .)
    TRUE            reduce using rule 45 (variable -> names END_LINE .)
    FALSE           reduce using rule 45 (variable -> names END_LINE .)
    NAME            reduce using rule 45 (variable -> names END_LINE .)
    DQUOTE          reduce using rule 45 (variable -> names END_LINE .)
    STRING_CAST     reduce using rule 45 (variable -> names END_LINE .)
    DRUG            reduce using rule 45 (variable -> names END_LINE .)
    END_LINE        reduce using rule 45 (variable -> names END_LINE .)
    $end            reduce using rule 45 (variable -> names END_LINE .)
    HEY             reduce using rule 45 (variable -> names END_LINE .)
    ELSE            reduce using rule 45 (variable -> names END_LINE .)
    OH              reduce using rule 45 (variable -> names END_LINE .)
    QUESTION_MARK   reduce using rule 45 (variable -> names END_LINE .)
    AND             reduce using rule 45 (variable -> names END_LINE .)
    OR              reduce using rule 45 (variable -> names END_LINE .)
    DO              reduce using rule 45 (variable -> names END_LINE .)
    EXCLAMATION_MARK reduce using rule 45 (variable -> names END_LINE .)
    CHE             reduce using rule 45 (variable -> names END_LINE .)
    AS              reduce using rule 45 (variable -> names END_LINE .)


state 47

    (46) names -> NAME names .

    END_LINE        reduce using rule 46 (names -> NAME names .)
    EQUALS          reduce using rule 46 (names -> NAME names .)
    COMPARISON      reduce using rule 46 (names -> NAME names .)
    MINOR           reduce using rule 46 (names -> NAME names .)
    MAJOR           reduce using rule 46 (names -> NAME names .)
    NOT             reduce using rule 46 (names -> NAME names .)
    PLUS            reduce using rule 46 (names -> NAME names .)
    MINUS           reduce using rule 46 (names -> NAME names .)
    TIMES           reduce using rule 46 (names -> NAME names .)
    DIVIDE          reduce using rule 46 (names -> NAME names .)
    MODULE          reduce using rule 46 (names -> NAME names .)
    POINT           reduce using rule 46 (names -> NAME names .)
    SAI             reduce using rule 46 (names -> NAME names .)
    RETURN          reduce using rule 46 (names -> NAME names .)
    WHILE           reduce using rule 46 (names -> NAME names .)
    PRINT           reduce using rule 46 (names -> NAME names .)
    CALL            reduce using rule 46 (names -> NAME names .)
    TRUE            reduce using rule 46 (names -> NAME names .)
    FALSE           reduce using rule 46 (names -> NAME names .)
    NAME            reduce using rule 46 (names -> NAME names .)
    DQUOTE          reduce using rule 46 (names -> NAME names .)
    STRING_CAST     reduce using rule 46 (names -> NAME names .)
    DRUG            reduce using rule 46 (names -> NAME names .)
    $end            reduce using rule 46 (names -> NAME names .)
    HEY             reduce using rule 46 (names -> NAME names .)
    ELSE            reduce using rule 46 (names -> NAME names .)
    OH              reduce using rule 46 (names -> NAME names .)
    QUESTION_MARK   reduce using rule 46 (names -> NAME names .)
    AND             reduce using rule 46 (names -> NAME names .)
    OR              reduce using rule 46 (names -> NAME names .)
    DO              reduce using rule 46 (names -> NAME names .)
    EXCLAMATION_MARK reduce using rule 46 (names -> NAME names .)
    CHE             reduce using rule 46 (names -> NAME names .)
    AS              reduce using rule 46 (names -> NAME names .)


state 48

    (29) expression -> DQUOTE variable . DQUOTE

    DQUOTE          shift and go to state 71


state 49

    (31) expression -> STRING_CAST variable .

    COMPARISON      reduce using rule 31 (expression -> STRING_CAST variable .)
    MINOR           reduce using rule 31 (expression -> STRING_CAST variable .)
    MAJOR           reduce using rule 31 (expression -> STRING_CAST variable .)
    NOT             reduce using rule 31 (expression -> STRING_CAST variable .)
    PLUS            reduce using rule 31 (expression -> STRING_CAST variable .)
    MINUS           reduce using rule 31 (expression -> STRING_CAST variable .)
    TIMES           reduce using rule 31 (expression -> STRING_CAST variable .)
    DIVIDE          reduce using rule 31 (expression -> STRING_CAST variable .)
    MODULE          reduce using rule 31 (expression -> STRING_CAST variable .)
    POINT           reduce using rule 31 (expression -> STRING_CAST variable .)
    SAI             reduce using rule 31 (expression -> STRING_CAST variable .)
    RETURN          reduce using rule 31 (expression -> STRING_CAST variable .)
    WHILE           reduce using rule 31 (expression -> STRING_CAST variable .)
    PRINT           reduce using rule 31 (expression -> STRING_CAST variable .)
    CALL            reduce using rule 31 (expression -> STRING_CAST variable .)
    TRUE            reduce using rule 31 (expression -> STRING_CAST variable .)
    FALSE           reduce using rule 31 (expression -> STRING_CAST variable .)
    NAME            reduce using rule 31 (expression -> STRING_CAST variable .)
    DQUOTE          reduce using rule 31 (expression -> STRING_CAST variable .)
    STRING_CAST     reduce using rule 31 (expression -> STRING_CAST variable .)
    DRUG            reduce using rule 31 (expression -> STRING_CAST variable .)
    EQUALS          reduce using rule 31 (expression -> STRING_CAST variable .)
    END_LINE        reduce using rule 31 (expression -> STRING_CAST variable .)
    $end            reduce using rule 31 (expression -> STRING_CAST variable .)
    HEY             reduce using rule 31 (expression -> STRING_CAST variable .)
    ELSE            reduce using rule 31 (expression -> STRING_CAST variable .)
    OH              reduce using rule 31 (expression -> STRING_CAST variable .)
    QUESTION_MARK   reduce using rule 31 (expression -> STRING_CAST variable .)
    AND             reduce using rule 31 (expression -> STRING_CAST variable .)
    OR              reduce using rule 31 (expression -> STRING_CAST variable .)
    DO              reduce using rule 31 (expression -> STRING_CAST variable .)
    EXCLAMATION_MARK reduce using rule 31 (expression -> STRING_CAST variable .)


state 50

    (32) expression -> MINUS statement .

    COMPARISON      reduce using rule 32 (expression -> MINUS statement .)
    MINOR           reduce using rule 32 (expression -> MINUS statement .)
    MAJOR           reduce using rule 32 (expression -> MINUS statement .)
    NOT             reduce using rule 32 (expression -> MINUS statement .)
    PLUS            reduce using rule 32 (expression -> MINUS statement .)
    MINUS           reduce using rule 32 (expression -> MINUS statement .)
    TIMES           reduce using rule 32 (expression -> MINUS statement .)
    DIVIDE          reduce using rule 32 (expression -> MINUS statement .)
    MODULE          reduce using rule 32 (expression -> MINUS statement .)
    POINT           reduce using rule 32 (expression -> MINUS statement .)
    SAI             reduce using rule 32 (expression -> MINUS statement .)
    RETURN          reduce using rule 32 (expression -> MINUS statement .)
    WHILE           reduce using rule 32 (expression -> MINUS statement .)
    PRINT           reduce using rule 32 (expression -> MINUS statement .)
    CALL            reduce using rule 32 (expression -> MINUS statement .)
    TRUE            reduce using rule 32 (expression -> MINUS statement .)
    FALSE           reduce using rule 32 (expression -> MINUS statement .)
    NAME            reduce using rule 32 (expression -> MINUS statement .)
    DQUOTE          reduce using rule 32 (expression -> MINUS statement .)
    STRING_CAST     reduce using rule 32 (expression -> MINUS statement .)
    DRUG            reduce using rule 32 (expression -> MINUS statement .)
    EQUALS          reduce using rule 32 (expression -> MINUS statement .)
    END_LINE        reduce using rule 32 (expression -> MINUS statement .)
    $end            reduce using rule 32 (expression -> MINUS statement .)
    HEY             reduce using rule 32 (expression -> MINUS statement .)
    ELSE            reduce using rule 32 (expression -> MINUS statement .)
    OH              reduce using rule 32 (expression -> MINUS statement .)
    QUESTION_MARK   reduce using rule 32 (expression -> MINUS statement .)
    AND             reduce using rule 32 (expression -> MINUS statement .)
    OR              reduce using rule 32 (expression -> MINUS statement .)
    DO              reduce using rule 32 (expression -> MINUS statement .)
    EXCLAMATION_MARK reduce using rule 32 (expression -> MINUS statement .)


state 51

    (37) numbers -> DRUG NUMBER .

    COMPARISON      reduce using rule 37 (numbers -> DRUG NUMBER .)
    MINOR           reduce using rule 37 (numbers -> DRUG NUMBER .)
    MAJOR           reduce using rule 37 (numbers -> DRUG NUMBER .)
    NOT             reduce using rule 37 (numbers -> DRUG NUMBER .)
    PLUS            reduce using rule 37 (numbers -> DRUG NUMBER .)
    MINUS           reduce using rule 37 (numbers -> DRUG NUMBER .)
    TIMES           reduce using rule 37 (numbers -> DRUG NUMBER .)
    DIVIDE          reduce using rule 37 (numbers -> DRUG NUMBER .)
    MODULE          reduce using rule 37 (numbers -> DRUG NUMBER .)
    POINT           reduce using rule 37 (numbers -> DRUG NUMBER .)
    SAI             reduce using rule 37 (numbers -> DRUG NUMBER .)
    RETURN          reduce using rule 37 (numbers -> DRUG NUMBER .)
    WHILE           reduce using rule 37 (numbers -> DRUG NUMBER .)
    PRINT           reduce using rule 37 (numbers -> DRUG NUMBER .)
    CALL            reduce using rule 37 (numbers -> DRUG NUMBER .)
    TRUE            reduce using rule 37 (numbers -> DRUG NUMBER .)
    FALSE           reduce using rule 37 (numbers -> DRUG NUMBER .)
    NAME            reduce using rule 37 (numbers -> DRUG NUMBER .)
    DQUOTE          reduce using rule 37 (numbers -> DRUG NUMBER .)
    STRING_CAST     reduce using rule 37 (numbers -> DRUG NUMBER .)
    DRUG            reduce using rule 37 (numbers -> DRUG NUMBER .)
    EQUALS          reduce using rule 37 (numbers -> DRUG NUMBER .)
    END_LINE        reduce using rule 37 (numbers -> DRUG NUMBER .)
    $end            reduce using rule 37 (numbers -> DRUG NUMBER .)
    HEY             reduce using rule 37 (numbers -> DRUG NUMBER .)
    ELSE            reduce using rule 37 (numbers -> DRUG NUMBER .)
    OH              reduce using rule 37 (numbers -> DRUG NUMBER .)
    QUESTION_MARK   reduce using rule 37 (numbers -> DRUG NUMBER .)
    AND             reduce using rule 37 (numbers -> DRUG NUMBER .)
    OR              reduce using rule 37 (numbers -> DRUG NUMBER .)
    DO              reduce using rule 37 (numbers -> DRUG NUMBER .)
    EXCLAMATION_MARK reduce using rule 37 (numbers -> DRUG NUMBER .)


state 52

    (3) statements -> statement POINT statements .

    $end            reduce using rule 3 (statements -> statement POINT statements .)
    HEY             reduce using rule 3 (statements -> statement POINT statements .)
    ELSE            reduce using rule 3 (statements -> statement POINT statements .)
    OH              reduce using rule 3 (statements -> statement POINT statements .)


state 53

    (6) statement -> SAI CHE EQUALS . variable AS params HEY statements OH
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    AS              reduce using rule 47 (names -> .)

    variable                       shift and go to state 72
    names                          shift and go to state 14

state 54

    (17) statement -> variable EQUALS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for MINOR resolved as shift
  ! shift/reduce conflict for MAJOR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    POINT           reduce using rule 17 (statement -> variable EQUALS expression .)
    SAI             reduce using rule 17 (statement -> variable EQUALS expression .)
    RETURN          reduce using rule 17 (statement -> variable EQUALS expression .)
    WHILE           reduce using rule 17 (statement -> variable EQUALS expression .)
    PRINT           reduce using rule 17 (statement -> variable EQUALS expression .)
    CALL            reduce using rule 17 (statement -> variable EQUALS expression .)
    TRUE            reduce using rule 17 (statement -> variable EQUALS expression .)
    FALSE           reduce using rule 17 (statement -> variable EQUALS expression .)
    NAME            reduce using rule 17 (statement -> variable EQUALS expression .)
    DQUOTE          reduce using rule 17 (statement -> variable EQUALS expression .)
    STRING_CAST     reduce using rule 17 (statement -> variable EQUALS expression .)
    DRUG            reduce using rule 17 (statement -> variable EQUALS expression .)
    EQUALS          reduce using rule 17 (statement -> variable EQUALS expression .)
    END_LINE        reduce using rule 17 (statement -> variable EQUALS expression .)
    $end            reduce using rule 17 (statement -> variable EQUALS expression .)
    HEY             reduce using rule 17 (statement -> variable EQUALS expression .)
    ELSE            reduce using rule 17 (statement -> variable EQUALS expression .)
    OH              reduce using rule 17 (statement -> variable EQUALS expression .)
    QUESTION_MARK   reduce using rule 17 (statement -> variable EQUALS expression .)
    AND             reduce using rule 17 (statement -> variable EQUALS expression .)
    OR              reduce using rule 17 (statement -> variable EQUALS expression .)
    DO              reduce using rule 17 (statement -> variable EQUALS expression .)
    EXCLAMATION_MARK reduce using rule 17 (statement -> variable EQUALS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39
    COMPARISON      shift and go to state 31
    MINOR           shift and go to state 32
    MAJOR           shift and go to state 33
    NOT             shift and go to state 34

  ! MINUS           [ reduce using rule 17 (statement -> variable EQUALS expression .) ]
  ! COMPARISON      [ reduce using rule 17 (statement -> variable EQUALS expression .) ]
  ! MINOR           [ reduce using rule 17 (statement -> variable EQUALS expression .) ]
  ! MAJOR           [ reduce using rule 17 (statement -> variable EQUALS expression .) ]
  ! NOT             [ reduce using rule 17 (statement -> variable EQUALS expression .) ]
  ! PLUS            [ reduce using rule 17 (statement -> variable EQUALS expression .) ]
  ! TIMES           [ reduce using rule 17 (statement -> variable EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (statement -> variable EQUALS expression .) ]
  ! MODULE          [ reduce using rule 17 (statement -> variable EQUALS expression .) ]


state 55

    (21) boolean_expression -> expression COMPARISON expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for MINOR resolved as shift
  ! shift/reduce conflict for MAJOR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    QUESTION_MARK   reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    AND             reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    OR              reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    POINT           reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    SAI             reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    RETURN          reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    WHILE           reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    PRINT           reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    CALL            reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    TRUE            reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    FALSE           reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    NAME            reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    DQUOTE          reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    STRING_CAST     reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    DRUG            reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    EQUALS          reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    END_LINE        reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    $end            reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    HEY             reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    ELSE            reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    OH              reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    DO              reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    EXCLAMATION_MARK reduce using rule 21 (boolean_expression -> expression COMPARISON expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39
    COMPARISON      shift and go to state 31
    MINOR           shift and go to state 32
    MAJOR           shift and go to state 33
    NOT             shift and go to state 34

  ! COMPARISON      [ reduce using rule 21 (boolean_expression -> expression COMPARISON expression .) ]
  ! MINOR           [ reduce using rule 21 (boolean_expression -> expression COMPARISON expression .) ]
  ! MAJOR           [ reduce using rule 21 (boolean_expression -> expression COMPARISON expression .) ]
  ! NOT             [ reduce using rule 21 (boolean_expression -> expression COMPARISON expression .) ]
  ! PLUS            [ reduce using rule 21 (boolean_expression -> expression COMPARISON expression .) ]
  ! MINUS           [ reduce using rule 21 (boolean_expression -> expression COMPARISON expression .) ]
  ! TIMES           [ reduce using rule 21 (boolean_expression -> expression COMPARISON expression .) ]
  ! DIVIDE          [ reduce using rule 21 (boolean_expression -> expression COMPARISON expression .) ]
  ! MODULE          [ reduce using rule 21 (boolean_expression -> expression COMPARISON expression .) ]


state 56

    (22) boolean_expression -> expression MINOR expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for MINOR resolved as shift
  ! shift/reduce conflict for MAJOR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    QUESTION_MARK   reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    AND             reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    OR              reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    POINT           reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    SAI             reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    RETURN          reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    WHILE           reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    PRINT           reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    CALL            reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    TRUE            reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    FALSE           reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    NAME            reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    DQUOTE          reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    STRING_CAST     reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    DRUG            reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    EQUALS          reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    END_LINE        reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    $end            reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    HEY             reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    ELSE            reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    OH              reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    DO              reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    EXCLAMATION_MARK reduce using rule 22 (boolean_expression -> expression MINOR expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39
    COMPARISON      shift and go to state 31
    MINOR           shift and go to state 32
    MAJOR           shift and go to state 33
    NOT             shift and go to state 34

  ! COMPARISON      [ reduce using rule 22 (boolean_expression -> expression MINOR expression .) ]
  ! MINOR           [ reduce using rule 22 (boolean_expression -> expression MINOR expression .) ]
  ! MAJOR           [ reduce using rule 22 (boolean_expression -> expression MINOR expression .) ]
  ! NOT             [ reduce using rule 22 (boolean_expression -> expression MINOR expression .) ]
  ! PLUS            [ reduce using rule 22 (boolean_expression -> expression MINOR expression .) ]
  ! MINUS           [ reduce using rule 22 (boolean_expression -> expression MINOR expression .) ]
  ! TIMES           [ reduce using rule 22 (boolean_expression -> expression MINOR expression .) ]
  ! DIVIDE          [ reduce using rule 22 (boolean_expression -> expression MINOR expression .) ]
  ! MODULE          [ reduce using rule 22 (boolean_expression -> expression MINOR expression .) ]


state 57

    (23) boolean_expression -> expression MAJOR expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for MINOR resolved as shift
  ! shift/reduce conflict for MAJOR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    QUESTION_MARK   reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    AND             reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    OR              reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    POINT           reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    SAI             reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    RETURN          reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    WHILE           reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    PRINT           reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    CALL            reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    TRUE            reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    FALSE           reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    NAME            reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    DQUOTE          reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    STRING_CAST     reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    DRUG            reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    EQUALS          reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    END_LINE        reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    $end            reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    HEY             reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    ELSE            reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    OH              reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    DO              reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    EXCLAMATION_MARK reduce using rule 23 (boolean_expression -> expression MAJOR expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39
    COMPARISON      shift and go to state 31
    MINOR           shift and go to state 32
    MAJOR           shift and go to state 33
    NOT             shift and go to state 34

  ! COMPARISON      [ reduce using rule 23 (boolean_expression -> expression MAJOR expression .) ]
  ! MINOR           [ reduce using rule 23 (boolean_expression -> expression MAJOR expression .) ]
  ! MAJOR           [ reduce using rule 23 (boolean_expression -> expression MAJOR expression .) ]
  ! NOT             [ reduce using rule 23 (boolean_expression -> expression MAJOR expression .) ]
  ! PLUS            [ reduce using rule 23 (boolean_expression -> expression MAJOR expression .) ]
  ! MINUS           [ reduce using rule 23 (boolean_expression -> expression MAJOR expression .) ]
  ! TIMES           [ reduce using rule 23 (boolean_expression -> expression MAJOR expression .) ]
  ! DIVIDE          [ reduce using rule 23 (boolean_expression -> expression MAJOR expression .) ]
  ! MODULE          [ reduce using rule 23 (boolean_expression -> expression MAJOR expression .) ]


state 58

    (24) boolean_expression -> expression NOT COMPARISON . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 73
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 59

    (25) boolean_expression -> expression NOT MINOR . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 74
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 60

    (26) boolean_expression -> expression NOT MAJOR . expression
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DQUOTE resolved as shift
  ! shift/reduce conflict for STRING_CAST resolved as shift
  ! shift/reduce conflict for DRUG resolved as shift
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    POINT           reduce using rule 47 (names -> .)
    SAI             reduce using rule 47 (names -> .)
    RETURN          reduce using rule 47 (names -> .)
    WHILE           reduce using rule 47 (names -> .)
    PRINT           reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    $end            reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)
    ELSE            reduce using rule 47 (names -> .)
    OH              reduce using rule 47 (names -> .)
    QUESTION_MARK   reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    OR              reduce using rule 47 (names -> .)
    DO              reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]
  ! CALL            [ reduce using rule 47 (names -> .) ]
  ! TRUE            [ reduce using rule 47 (names -> .) ]
  ! FALSE           [ reduce using rule 47 (names -> .) ]
  ! NAME            [ reduce using rule 47 (names -> .) ]
  ! DQUOTE          [ reduce using rule 47 (names -> .) ]
  ! STRING_CAST     [ reduce using rule 47 (names -> .) ]
  ! DRUG            [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 75
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 61

    (38) expression -> expression PLUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

    COMPARISON      reduce using rule 38 (expression -> expression PLUS expression .)
    MINOR           reduce using rule 38 (expression -> expression PLUS expression .)
    MAJOR           reduce using rule 38 (expression -> expression PLUS expression .)
    NOT             reduce using rule 38 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 38 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 38 (expression -> expression PLUS expression .)
    POINT           reduce using rule 38 (expression -> expression PLUS expression .)
    SAI             reduce using rule 38 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 38 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 38 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 38 (expression -> expression PLUS expression .)
    CALL            reduce using rule 38 (expression -> expression PLUS expression .)
    TRUE            reduce using rule 38 (expression -> expression PLUS expression .)
    FALSE           reduce using rule 38 (expression -> expression PLUS expression .)
    NAME            reduce using rule 38 (expression -> expression PLUS expression .)
    DQUOTE          reduce using rule 38 (expression -> expression PLUS expression .)
    STRING_CAST     reduce using rule 38 (expression -> expression PLUS expression .)
    DRUG            reduce using rule 38 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 38 (expression -> expression PLUS expression .)
    END_LINE        reduce using rule 38 (expression -> expression PLUS expression .)
    $end            reduce using rule 38 (expression -> expression PLUS expression .)
    HEY             reduce using rule 38 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 38 (expression -> expression PLUS expression .)
    OH              reduce using rule 38 (expression -> expression PLUS expression .)
    QUESTION_MARK   reduce using rule 38 (expression -> expression PLUS expression .)
    AND             reduce using rule 38 (expression -> expression PLUS expression .)
    OR              reduce using rule 38 (expression -> expression PLUS expression .)
    DO              reduce using rule 38 (expression -> expression PLUS expression .)
    EXCLAMATION_MARK reduce using rule 38 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39

  ! TIMES           [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! MODULE          [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! COMPARISON      [ shift and go to state 31 ]
  ! MINOR           [ shift and go to state 32 ]
  ! MAJOR           [ shift and go to state 33 ]
  ! NOT             [ shift and go to state 34 ]


state 62

    (39) expression -> expression MINUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

    COMPARISON      reduce using rule 39 (expression -> expression MINUS expression .)
    MINOR           reduce using rule 39 (expression -> expression MINUS expression .)
    MAJOR           reduce using rule 39 (expression -> expression MINUS expression .)
    NOT             reduce using rule 39 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 39 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 39 (expression -> expression MINUS expression .)
    POINT           reduce using rule 39 (expression -> expression MINUS expression .)
    SAI             reduce using rule 39 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 39 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 39 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 39 (expression -> expression MINUS expression .)
    CALL            reduce using rule 39 (expression -> expression MINUS expression .)
    TRUE            reduce using rule 39 (expression -> expression MINUS expression .)
    FALSE           reduce using rule 39 (expression -> expression MINUS expression .)
    NAME            reduce using rule 39 (expression -> expression MINUS expression .)
    DQUOTE          reduce using rule 39 (expression -> expression MINUS expression .)
    STRING_CAST     reduce using rule 39 (expression -> expression MINUS expression .)
    DRUG            reduce using rule 39 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 39 (expression -> expression MINUS expression .)
    END_LINE        reduce using rule 39 (expression -> expression MINUS expression .)
    $end            reduce using rule 39 (expression -> expression MINUS expression .)
    HEY             reduce using rule 39 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 39 (expression -> expression MINUS expression .)
    OH              reduce using rule 39 (expression -> expression MINUS expression .)
    QUESTION_MARK   reduce using rule 39 (expression -> expression MINUS expression .)
    AND             reduce using rule 39 (expression -> expression MINUS expression .)
    OR              reduce using rule 39 (expression -> expression MINUS expression .)
    DO              reduce using rule 39 (expression -> expression MINUS expression .)
    EXCLAMATION_MARK reduce using rule 39 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39

  ! TIMES           [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! MODULE          [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! COMPARISON      [ shift and go to state 31 ]
  ! MINOR           [ shift and go to state 32 ]
  ! MAJOR           [ shift and go to state 33 ]
  ! NOT             [ shift and go to state 34 ]


state 63

    (40) expression -> expression TIMES expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

    COMPARISON      reduce using rule 40 (expression -> expression TIMES expression .)
    MINOR           reduce using rule 40 (expression -> expression TIMES expression .)
    MAJOR           reduce using rule 40 (expression -> expression TIMES expression .)
    NOT             reduce using rule 40 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 40 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 40 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 40 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 40 (expression -> expression TIMES expression .)
    MODULE          reduce using rule 40 (expression -> expression TIMES expression .)
    POINT           reduce using rule 40 (expression -> expression TIMES expression .)
    SAI             reduce using rule 40 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 40 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 40 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 40 (expression -> expression TIMES expression .)
    CALL            reduce using rule 40 (expression -> expression TIMES expression .)
    TRUE            reduce using rule 40 (expression -> expression TIMES expression .)
    FALSE           reduce using rule 40 (expression -> expression TIMES expression .)
    NAME            reduce using rule 40 (expression -> expression TIMES expression .)
    DQUOTE          reduce using rule 40 (expression -> expression TIMES expression .)
    STRING_CAST     reduce using rule 40 (expression -> expression TIMES expression .)
    DRUG            reduce using rule 40 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 40 (expression -> expression TIMES expression .)
    END_LINE        reduce using rule 40 (expression -> expression TIMES expression .)
    $end            reduce using rule 40 (expression -> expression TIMES expression .)
    HEY             reduce using rule 40 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 40 (expression -> expression TIMES expression .)
    OH              reduce using rule 40 (expression -> expression TIMES expression .)
    QUESTION_MARK   reduce using rule 40 (expression -> expression TIMES expression .)
    AND             reduce using rule 40 (expression -> expression TIMES expression .)
    OR              reduce using rule 40 (expression -> expression TIMES expression .)
    DO              reduce using rule 40 (expression -> expression TIMES expression .)
    EXCLAMATION_MARK reduce using rule 40 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULE          [ shift and go to state 39 ]
  ! COMPARISON      [ shift and go to state 31 ]
  ! MINOR           [ shift and go to state 32 ]
  ! MAJOR           [ shift and go to state 33 ]
  ! NOT             [ shift and go to state 34 ]


state 64

    (41) expression -> expression DIVIDE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

    COMPARISON      reduce using rule 41 (expression -> expression DIVIDE expression .)
    MINOR           reduce using rule 41 (expression -> expression DIVIDE expression .)
    MAJOR           reduce using rule 41 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 41 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 41 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 41 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 41 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 41 (expression -> expression DIVIDE expression .)
    MODULE          reduce using rule 41 (expression -> expression DIVIDE expression .)
    POINT           reduce using rule 41 (expression -> expression DIVIDE expression .)
    SAI             reduce using rule 41 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 41 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 41 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 41 (expression -> expression DIVIDE expression .)
    CALL            reduce using rule 41 (expression -> expression DIVIDE expression .)
    TRUE            reduce using rule 41 (expression -> expression DIVIDE expression .)
    FALSE           reduce using rule 41 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 41 (expression -> expression DIVIDE expression .)
    DQUOTE          reduce using rule 41 (expression -> expression DIVIDE expression .)
    STRING_CAST     reduce using rule 41 (expression -> expression DIVIDE expression .)
    DRUG            reduce using rule 41 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 41 (expression -> expression DIVIDE expression .)
    END_LINE        reduce using rule 41 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 41 (expression -> expression DIVIDE expression .)
    HEY             reduce using rule 41 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 41 (expression -> expression DIVIDE expression .)
    OH              reduce using rule 41 (expression -> expression DIVIDE expression .)
    QUESTION_MARK   reduce using rule 41 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 41 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 41 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 41 (expression -> expression DIVIDE expression .)
    EXCLAMATION_MARK reduce using rule 41 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULE          [ shift and go to state 39 ]
  ! COMPARISON      [ shift and go to state 31 ]
  ! MINOR           [ shift and go to state 32 ]
  ! MAJOR           [ shift and go to state 33 ]
  ! NOT             [ shift and go to state 34 ]


state 65

    (42) expression -> expression MODULE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

    COMPARISON      reduce using rule 42 (expression -> expression MODULE expression .)
    MINOR           reduce using rule 42 (expression -> expression MODULE expression .)
    MAJOR           reduce using rule 42 (expression -> expression MODULE expression .)
    NOT             reduce using rule 42 (expression -> expression MODULE expression .)
    PLUS            reduce using rule 42 (expression -> expression MODULE expression .)
    MINUS           reduce using rule 42 (expression -> expression MODULE expression .)
    TIMES           reduce using rule 42 (expression -> expression MODULE expression .)
    DIVIDE          reduce using rule 42 (expression -> expression MODULE expression .)
    MODULE          reduce using rule 42 (expression -> expression MODULE expression .)
    POINT           reduce using rule 42 (expression -> expression MODULE expression .)
    SAI             reduce using rule 42 (expression -> expression MODULE expression .)
    RETURN          reduce using rule 42 (expression -> expression MODULE expression .)
    WHILE           reduce using rule 42 (expression -> expression MODULE expression .)
    PRINT           reduce using rule 42 (expression -> expression MODULE expression .)
    CALL            reduce using rule 42 (expression -> expression MODULE expression .)
    TRUE            reduce using rule 42 (expression -> expression MODULE expression .)
    FALSE           reduce using rule 42 (expression -> expression MODULE expression .)
    NAME            reduce using rule 42 (expression -> expression MODULE expression .)
    DQUOTE          reduce using rule 42 (expression -> expression MODULE expression .)
    STRING_CAST     reduce using rule 42 (expression -> expression MODULE expression .)
    DRUG            reduce using rule 42 (expression -> expression MODULE expression .)
    EQUALS          reduce using rule 42 (expression -> expression MODULE expression .)
    END_LINE        reduce using rule 42 (expression -> expression MODULE expression .)
    $end            reduce using rule 42 (expression -> expression MODULE expression .)
    HEY             reduce using rule 42 (expression -> expression MODULE expression .)
    ELSE            reduce using rule 42 (expression -> expression MODULE expression .)
    OH              reduce using rule 42 (expression -> expression MODULE expression .)
    QUESTION_MARK   reduce using rule 42 (expression -> expression MODULE expression .)
    AND             reduce using rule 42 (expression -> expression MODULE expression .)
    OR              reduce using rule 42 (expression -> expression MODULE expression .)
    DO              reduce using rule 42 (expression -> expression MODULE expression .)
    EXCLAMATION_MARK reduce using rule 42 (expression -> expression MODULE expression .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULE          [ shift and go to state 39 ]
  ! COMPARISON      [ shift and go to state 31 ]
  ! MINOR           [ shift and go to state 32 ]
  ! MAJOR           [ shift and go to state 33 ]
  ! NOT             [ shift and go to state 34 ]


state 66

    (18) statement -> boolean_expression QUESTION_MARK statements . HEY
    (20) statement -> boolean_expression QUESTION_MARK statements . ELSE statements HEY

    HEY             shift and go to state 76
    ELSE            shift and go to state 77


state 67

    (27) boolean_expression -> boolean_expression AND boolean_expression .
    (27) boolean_expression -> boolean_expression . AND boolean_expression
    (28) boolean_expression -> boolean_expression . OR boolean_expression
    (35) expression -> boolean_expression .

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! reduce/reduce conflict for COMPARISON resolved using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
  ! reduce/reduce conflict for MINOR resolved using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
  ! reduce/reduce conflict for MAJOR resolved using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
  ! reduce/reduce conflict for NOT resolved using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
  ! reduce/reduce conflict for TIMES resolved using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
  ! reduce/reduce conflict for MODULE resolved using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    QUESTION_MARK   reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    COMPARISON      reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    MINOR           reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    MAJOR           reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    NOT             reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    PLUS            reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    MINUS           reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    TIMES           reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    DIVIDE          reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    MODULE          reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    POINT           reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    SAI             reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    RETURN          reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    WHILE           reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    PRINT           reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    CALL            reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    TRUE            reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    FALSE           reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    NAME            reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    DQUOTE          reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    STRING_CAST     reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    DRUG            reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    EQUALS          reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    END_LINE        reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    $end            reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    HEY             reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    ELSE            reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    OH              reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    DO              reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    EXCLAMATION_MARK reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .)
    AND             shift and go to state 41
    OR              shift and go to state 42

  ! AND             [ reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .) ]
  ! OR              [ reduce using rule 27 (boolean_expression -> boolean_expression AND boolean_expression .) ]
  ! COMPARISON      [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! MINOR           [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! MAJOR           [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! NOT             [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! MODULE          [ reduce using rule 35 (expression -> boolean_expression .) ]


state 68

    (28) boolean_expression -> boolean_expression OR boolean_expression .
    (27) boolean_expression -> boolean_expression . AND boolean_expression
    (28) boolean_expression -> boolean_expression . OR boolean_expression
    (35) expression -> boolean_expression .

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! reduce/reduce conflict for COMPARISON resolved using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
  ! reduce/reduce conflict for MINOR resolved using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
  ! reduce/reduce conflict for MAJOR resolved using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
  ! reduce/reduce conflict for NOT resolved using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
  ! reduce/reduce conflict for TIMES resolved using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
  ! reduce/reduce conflict for MODULE resolved using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    QUESTION_MARK   reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    COMPARISON      reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    MINOR           reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    MAJOR           reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    NOT             reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    PLUS            reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    MINUS           reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    TIMES           reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    DIVIDE          reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    MODULE          reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    POINT           reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    SAI             reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    RETURN          reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    WHILE           reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    PRINT           reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    CALL            reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    TRUE            reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    FALSE           reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    NAME            reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    DQUOTE          reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    STRING_CAST     reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    DRUG            reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    EQUALS          reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    END_LINE        reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    $end            reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    HEY             reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    ELSE            reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    OH              reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    DO              reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    EXCLAMATION_MARK reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .)
    AND             shift and go to state 41
    OR              shift and go to state 42

  ! AND             [ reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .) ]
  ! OR              [ reduce using rule 28 (boolean_expression -> boolean_expression OR boolean_expression .) ]
  ! COMPARISON      [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! MINOR           [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! MAJOR           [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! NOT             [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> boolean_expression .) ]
  ! MODULE          [ reduce using rule 35 (expression -> boolean_expression .) ]


state 69

    (19) statement -> WHILE boolean_expression DO . statements HEY
    (2) statements -> . statement statements
    (3) statements -> . statement POINT statements
    (4) statements -> . empty_statement
    (6) statement -> . SAI CHE EQUALS variable AS params HEY statements OH
    (7) statement -> . function_invoke
    (16) statement -> . RETURN expression
    (17) statement -> . variable EQUALS expression
    (18) statement -> . boolean_expression QUESTION_MARK statements HEY
    (19) statement -> . WHILE boolean_expression DO statements HEY
    (20) statement -> . boolean_expression QUESTION_MARK statements ELSE statements HEY
    (30) statement -> . PRINT expression
    (5) empty_statement -> .
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (46) names -> . NAME names
    (47) names -> .
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (37) numbers -> . DRUG NUMBER

  ! shift/reduce conflict for MINUS resolved as shift
    SAI             shift and go to state 5
    RETURN          shift and go to state 8
    WHILE           shift and go to state 11
    PRINT           shift and go to state 12
    HEY             reduce using rule 5 (empty_statement -> .)
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    DRUG            shift and go to state 22

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    boolean_expression             shift and go to state 10
    statements                     shift and go to state 78
    statement                      shift and go to state 3
    empty_statement                shift and go to state 4
    variable                       shift and go to state 6
    function_invoke                shift and go to state 7
    expression                     shift and go to state 9
    names                          shift and go to state 14
    numbers                        shift and go to state 21

state 70

    (9) function_invoke -> CALL variable CHE . EQUALS params_actual EXCLAMATION_MARK

    EQUALS          shift and go to state 79


state 71

    (29) expression -> DQUOTE variable DQUOTE .

    COMPARISON      reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    MINOR           reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    MAJOR           reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    NOT             reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    PLUS            reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    MINUS           reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    TIMES           reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    DIVIDE          reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    MODULE          reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    POINT           reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    SAI             reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    RETURN          reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    WHILE           reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    PRINT           reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    CALL            reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    TRUE            reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    FALSE           reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    NAME            reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    DQUOTE          reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    STRING_CAST     reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    DRUG            reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    EQUALS          reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    END_LINE        reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    $end            reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    HEY             reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    ELSE            reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    OH              reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    QUESTION_MARK   reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    AND             reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    OR              reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    DO              reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)
    EXCLAMATION_MARK reduce using rule 29 (expression -> DQUOTE variable DQUOTE .)


state 72

    (6) statement -> SAI CHE EQUALS variable . AS params HEY statements OH

    AS              shift and go to state 80


state 73

    (24) boolean_expression -> expression NOT COMPARISON expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for MINOR resolved as shift
  ! shift/reduce conflict for MAJOR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    QUESTION_MARK   reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    AND             reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    OR              reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    POINT           reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    SAI             reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    RETURN          reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    WHILE           reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    PRINT           reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    CALL            reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    TRUE            reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    FALSE           reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    NAME            reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    DQUOTE          reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    STRING_CAST     reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    DRUG            reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    EQUALS          reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    END_LINE        reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    $end            reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    HEY             reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    ELSE            reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    OH              reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    DO              reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    EXCLAMATION_MARK reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39
    COMPARISON      shift and go to state 31
    MINOR           shift and go to state 32
    MAJOR           shift and go to state 33
    NOT             shift and go to state 34

  ! COMPARISON      [ reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .) ]
  ! MINOR           [ reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .) ]
  ! MAJOR           [ reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .) ]
  ! NOT             [ reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .) ]
  ! PLUS            [ reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .) ]
  ! MINUS           [ reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .) ]
  ! TIMES           [ reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .) ]
  ! DIVIDE          [ reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .) ]
  ! MODULE          [ reduce using rule 24 (boolean_expression -> expression NOT COMPARISON expression .) ]


state 74

    (25) boolean_expression -> expression NOT MINOR expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for MINOR resolved as shift
  ! shift/reduce conflict for MAJOR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    QUESTION_MARK   reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    AND             reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    OR              reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    POINT           reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    SAI             reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    RETURN          reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    WHILE           reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    PRINT           reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    CALL            reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    TRUE            reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    FALSE           reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    NAME            reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    DQUOTE          reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    STRING_CAST     reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    DRUG            reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    EQUALS          reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    END_LINE        reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    $end            reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    HEY             reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    ELSE            reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    OH              reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    DO              reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    EXCLAMATION_MARK reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39
    COMPARISON      shift and go to state 31
    MINOR           shift and go to state 32
    MAJOR           shift and go to state 33
    NOT             shift and go to state 34

  ! COMPARISON      [ reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .) ]
  ! MINOR           [ reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .) ]
  ! MAJOR           [ reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .) ]
  ! NOT             [ reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .) ]
  ! PLUS            [ reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .) ]
  ! MINUS           [ reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .) ]
  ! TIMES           [ reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .) ]
  ! DIVIDE          [ reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .) ]
  ! MODULE          [ reduce using rule 25 (boolean_expression -> expression NOT MINOR expression .) ]


state 75

    (26) boolean_expression -> expression NOT MAJOR expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for MINOR resolved as shift
  ! shift/reduce conflict for MAJOR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    QUESTION_MARK   reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    AND             reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    OR              reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    POINT           reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    SAI             reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    RETURN          reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    WHILE           reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    PRINT           reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    CALL            reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    TRUE            reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    FALSE           reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    NAME            reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    DQUOTE          reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    STRING_CAST     reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    DRUG            reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    EQUALS          reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    END_LINE        reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    $end            reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    HEY             reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    ELSE            reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    OH              reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    DO              reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    EXCLAMATION_MARK reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39
    COMPARISON      shift and go to state 31
    MINOR           shift and go to state 32
    MAJOR           shift and go to state 33
    NOT             shift and go to state 34

  ! COMPARISON      [ reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .) ]
  ! MINOR           [ reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .) ]
  ! MAJOR           [ reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .) ]
  ! NOT             [ reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .) ]
  ! PLUS            [ reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .) ]
  ! MINUS           [ reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .) ]
  ! TIMES           [ reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .) ]
  ! DIVIDE          [ reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .) ]
  ! MODULE          [ reduce using rule 26 (boolean_expression -> expression NOT MAJOR expression .) ]


state 76

    (18) statement -> boolean_expression QUESTION_MARK statements HEY .

    POINT           reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    SAI             reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    RETURN          reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    WHILE           reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    PRINT           reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    CALL            reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    TRUE            reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    FALSE           reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    NAME            reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    DQUOTE          reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    STRING_CAST     reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    MINUS           reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    DRUG            reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    EQUALS          reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    END_LINE        reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    COMPARISON      reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    MINOR           reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    MAJOR           reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    NOT             reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    PLUS            reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    TIMES           reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    DIVIDE          reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    MODULE          reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    $end            reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    HEY             reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    ELSE            reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    OH              reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    QUESTION_MARK   reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    AND             reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    OR              reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    DO              reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)
    EXCLAMATION_MARK reduce using rule 18 (statement -> boolean_expression QUESTION_MARK statements HEY .)


state 77

    (20) statement -> boolean_expression QUESTION_MARK statements ELSE . statements HEY
    (2) statements -> . statement statements
    (3) statements -> . statement POINT statements
    (4) statements -> . empty_statement
    (6) statement -> . SAI CHE EQUALS variable AS params HEY statements OH
    (7) statement -> . function_invoke
    (16) statement -> . RETURN expression
    (17) statement -> . variable EQUALS expression
    (18) statement -> . boolean_expression QUESTION_MARK statements HEY
    (19) statement -> . WHILE boolean_expression DO statements HEY
    (20) statement -> . boolean_expression QUESTION_MARK statements ELSE statements HEY
    (30) statement -> . PRINT expression
    (5) empty_statement -> .
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (46) names -> . NAME names
    (47) names -> .
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (37) numbers -> . DRUG NUMBER

  ! shift/reduce conflict for MINUS resolved as shift
    SAI             shift and go to state 5
    RETURN          shift and go to state 8
    WHILE           shift and go to state 11
    PRINT           shift and go to state 12
    HEY             reduce using rule 5 (empty_statement -> .)
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    DRUG            shift and go to state 22

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    boolean_expression             shift and go to state 10
    statements                     shift and go to state 81
    statement                      shift and go to state 3
    empty_statement                shift and go to state 4
    variable                       shift and go to state 6
    function_invoke                shift and go to state 7
    expression                     shift and go to state 9
    names                          shift and go to state 14
    numbers                        shift and go to state 21

state 78

    (19) statement -> WHILE boolean_expression DO statements . HEY

    HEY             shift and go to state 82


state 79

    (9) function_invoke -> CALL variable CHE EQUALS . params_actual EXCLAMATION_MARK
    (13) params_actual -> . expression AND params_actual
    (14) params_actual -> . expression
    (15) params_actual -> . EMPTY_PARAM
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
    EMPTY_PARAM     shift and go to state 85
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    variable                       shift and go to state 29
    params_actual                  shift and go to state 83
    expression                     shift and go to state 84
    function_invoke                shift and go to state 28
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 80

    (6) statement -> SAI CHE EQUALS variable AS . params HEY statements OH
    (10) params -> . variable AND params
    (11) params -> . variable
    (12) params -> . EMPTY_PARAM
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

    EMPTY_PARAM     shift and go to state 88
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)

    variable                       shift and go to state 86
    params                         shift and go to state 87
    names                          shift and go to state 14

state 81

    (20) statement -> boolean_expression QUESTION_MARK statements ELSE statements . HEY

    HEY             shift and go to state 89


state 82

    (19) statement -> WHILE boolean_expression DO statements HEY .

    POINT           reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    SAI             reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    RETURN          reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    WHILE           reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    PRINT           reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    CALL            reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    TRUE            reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    FALSE           reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    NAME            reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    DQUOTE          reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    STRING_CAST     reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    MINUS           reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    DRUG            reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    EQUALS          reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    END_LINE        reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    COMPARISON      reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    MINOR           reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    MAJOR           reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    NOT             reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    PLUS            reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    TIMES           reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    DIVIDE          reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    MODULE          reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    $end            reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    HEY             reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    ELSE            reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    OH              reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    QUESTION_MARK   reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    AND             reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    OR              reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    DO              reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)
    EXCLAMATION_MARK reduce using rule 19 (statement -> WHILE boolean_expression DO statements HEY .)


state 83

    (9) function_invoke -> CALL variable CHE EQUALS params_actual . EXCLAMATION_MARK

    EXCLAMATION_MARK shift and go to state 90


state 84

    (13) params_actual -> expression . AND params_actual
    (14) params_actual -> expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . MODULE expression
    (21) boolean_expression -> expression . COMPARISON expression
    (22) boolean_expression -> expression . MINOR expression
    (23) boolean_expression -> expression . MAJOR expression
    (24) boolean_expression -> expression . NOT COMPARISON expression
    (25) boolean_expression -> expression . NOT MINOR expression
    (26) boolean_expression -> expression . NOT MAJOR expression

    AND             shift and go to state 91
    EXCLAMATION_MARK reduce using rule 14 (params_actual -> expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULE          shift and go to state 39
    COMPARISON      shift and go to state 31
    MINOR           shift and go to state 32
    MAJOR           shift and go to state 33
    NOT             shift and go to state 34


state 85

    (15) params_actual -> EMPTY_PARAM .

    EXCLAMATION_MARK reduce using rule 15 (params_actual -> EMPTY_PARAM .)


state 86

    (10) params -> variable . AND params
    (11) params -> variable .

    AND             shift and go to state 92
    HEY             reduce using rule 11 (params -> variable .)


state 87

    (6) statement -> SAI CHE EQUALS variable AS params . HEY statements OH

    HEY             shift and go to state 93


state 88

    (12) params -> EMPTY_PARAM .

    HEY             reduce using rule 12 (params -> EMPTY_PARAM .)


state 89

    (20) statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .

    POINT           reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    SAI             reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    RETURN          reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    WHILE           reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    PRINT           reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    CALL            reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    TRUE            reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    FALSE           reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    NAME            reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    DQUOTE          reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    STRING_CAST     reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    MINUS           reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    DRUG            reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    EQUALS          reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    END_LINE        reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    COMPARISON      reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    MINOR           reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    MAJOR           reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    NOT             reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    PLUS            reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    TIMES           reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    DIVIDE          reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    MODULE          reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    $end            reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    HEY             reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    ELSE            reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    OH              reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    QUESTION_MARK   reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    AND             reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    OR              reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    DO              reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)
    EXCLAMATION_MARK reduce using rule 20 (statement -> boolean_expression QUESTION_MARK statements ELSE statements HEY .)


state 90

    (9) function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .

    POINT           reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    SAI             reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    RETURN          reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    WHILE           reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    PRINT           reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    CALL            reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    TRUE            reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    FALSE           reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    NAME            reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    DQUOTE          reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    STRING_CAST     reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    MINUS           reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    DRUG            reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    EQUALS          reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    END_LINE        reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    COMPARISON      reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    MINOR           reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    MAJOR           reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    NOT             reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    PLUS            reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    TIMES           reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    DIVIDE          reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    MODULE          reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    $end            reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    HEY             reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    ELSE            reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    OH              reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    QUESTION_MARK   reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    AND             reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    OR              reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    DO              reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)
    EXCLAMATION_MARK reduce using rule 9 (function_invoke -> CALL variable CHE EQUALS params_actual EXCLAMATION_MARK .)


state 91

    (13) params_actual -> expression AND . params_actual
    (13) params_actual -> . expression AND params_actual
    (14) params_actual -> . expression
    (15) params_actual -> . EMPTY_PARAM
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (37) numbers -> . DRUG NUMBER
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

  ! shift/reduce conflict for MINUS resolved as shift
    EMPTY_PARAM     shift and go to state 85
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    DRUG            shift and go to state 22
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    EXCLAMATION_MARK reduce using rule 47 (names -> .)

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    expression                     shift and go to state 84
    params_actual                  shift and go to state 94
    function_invoke                shift and go to state 28
    variable                       shift and go to state 29
    boolean_expression             shift and go to state 30
    numbers                        shift and go to state 21
    names                          shift and go to state 14

state 92

    (10) params -> variable AND . params
    (10) params -> . variable AND params
    (11) params -> . variable
    (12) params -> . EMPTY_PARAM
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (46) names -> . NAME names
    (47) names -> .

    EMPTY_PARAM     shift and go to state 88
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    AND             reduce using rule 47 (names -> .)
    HEY             reduce using rule 47 (names -> .)

    variable                       shift and go to state 86
    params                         shift and go to state 95
    names                          shift and go to state 14

state 93

    (6) statement -> SAI CHE EQUALS variable AS params HEY . statements OH
    (2) statements -> . statement statements
    (3) statements -> . statement POINT statements
    (4) statements -> . empty_statement
    (6) statement -> . SAI CHE EQUALS variable AS params HEY statements OH
    (7) statement -> . function_invoke
    (16) statement -> . RETURN expression
    (17) statement -> . variable EQUALS expression
    (18) statement -> . boolean_expression QUESTION_MARK statements HEY
    (19) statement -> . WHILE boolean_expression DO statements HEY
    (20) statement -> . boolean_expression QUESTION_MARK statements ELSE statements HEY
    (30) statement -> . PRINT expression
    (5) empty_statement -> .
    (9) function_invoke -> . CALL variable CHE EQUALS params_actual EXCLAMATION_MARK
    (44) variable -> . names
    (45) variable -> . names END_LINE
    (21) boolean_expression -> . expression COMPARISON expression
    (22) boolean_expression -> . expression MINOR expression
    (23) boolean_expression -> . expression MAJOR expression
    (24) boolean_expression -> . expression NOT COMPARISON expression
    (25) boolean_expression -> . expression NOT MINOR expression
    (26) boolean_expression -> . expression NOT MAJOR expression
    (27) boolean_expression -> . boolean_expression AND boolean_expression
    (28) boolean_expression -> . boolean_expression OR boolean_expression
    (33) boolean_expression -> . TRUE
    (34) boolean_expression -> . FALSE
    (46) names -> . NAME names
    (47) names -> .
    (8) expression -> . function_invoke
    (29) expression -> . DQUOTE variable DQUOTE
    (31) expression -> . STRING_CAST variable
    (32) expression -> . MINUS statement
    (35) expression -> . boolean_expression
    (36) expression -> . numbers
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression MODULE expression
    (43) expression -> . variable
    (37) numbers -> . DRUG NUMBER

  ! shift/reduce conflict for MINUS resolved as shift
    SAI             shift and go to state 5
    RETURN          shift and go to state 8
    WHILE           shift and go to state 11
    PRINT           shift and go to state 12
    OH              reduce using rule 5 (empty_statement -> .)
    CALL            shift and go to state 13
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    NAME            shift and go to state 17
    END_LINE        reduce using rule 47 (names -> .)
    EQUALS          reduce using rule 47 (names -> .)
    COMPARISON      reduce using rule 47 (names -> .)
    MINOR           reduce using rule 47 (names -> .)
    MAJOR           reduce using rule 47 (names -> .)
    NOT             reduce using rule 47 (names -> .)
    PLUS            reduce using rule 47 (names -> .)
    TIMES           reduce using rule 47 (names -> .)
    DIVIDE          reduce using rule 47 (names -> .)
    MODULE          reduce using rule 47 (names -> .)
    DQUOTE          shift and go to state 18
    STRING_CAST     shift and go to state 19
    MINUS           shift and go to state 20
    DRUG            shift and go to state 22

  ! MINUS           [ reduce using rule 47 (names -> .) ]

    variable                       shift and go to state 6
    statements                     shift and go to state 96
    statement                      shift and go to state 3
    empty_statement                shift and go to state 4
    function_invoke                shift and go to state 7
    expression                     shift and go to state 9
    boolean_expression             shift and go to state 10
    names                          shift and go to state 14
    numbers                        shift and go to state 21

state 94

    (13) params_actual -> expression AND params_actual .

    EXCLAMATION_MARK reduce using rule 13 (params_actual -> expression AND params_actual .)


state 95

    (10) params -> variable AND params .

    HEY             reduce using rule 10 (params -> variable AND params .)


state 96

    (6) statement -> SAI CHE EQUALS variable AS params HEY statements . OH

    OH              shift and go to state 97


state 97

    (6) statement -> SAI CHE EQUALS variable AS params HEY statements OH .

    POINT           reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    SAI             reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    RETURN          reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    WHILE           reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    PRINT           reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    CALL            reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    TRUE            reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    FALSE           reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    NAME            reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    DQUOTE          reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    STRING_CAST     reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    MINUS           reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    DRUG            reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    EQUALS          reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    END_LINE        reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    COMPARISON      reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    MINOR           reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    MAJOR           reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    NOT             reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    PLUS            reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    TIMES           reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    DIVIDE          reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    MODULE          reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    $end            reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    HEY             reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    ELSE            reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    OH              reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    QUESTION_MARK   reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    AND             reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    OR              reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    DO              reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)
    EXCLAMATION_MARK reduce using rule 6 (statement -> SAI CHE EQUALS variable AS params HEY statements OH .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 3 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 8 resolved as shift
WARNING: shift/reduce conflict for CALL in state 8 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 8 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 8 resolved as shift
WARNING: shift/reduce conflict for NAME in state 8 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 8 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 8 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 11 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 12 resolved as shift
WARNING: shift/reduce conflict for CALL in state 12 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 12 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 12 resolved as shift
WARNING: shift/reduce conflict for NAME in state 12 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 12 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 12 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 12 resolved as shift
WARNING: shift/reduce conflict for END_LINE in state 14 resolved as shift
WARNING: shift/reduce conflict for NAME in state 17 resolved as shift
WARNING: shift/reduce conflict for NAME in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 20 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 26 resolved as shift
WARNING: shift/reduce conflict for CALL in state 26 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 26 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 26 resolved as shift
WARNING: shift/reduce conflict for NAME in state 26 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 26 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 26 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 26 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 27 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 27 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 27 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 27 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 27 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 27 resolved as shift
WARNING: shift/reduce conflict for MINOR in state 27 resolved as shift
WARNING: shift/reduce conflict for MAJOR in state 27 resolved as shift
WARNING: shift/reduce conflict for NOT in state 27 resolved as shift
WARNING: shift/reduce conflict for AND in state 30 resolved as shift
WARNING: shift/reduce conflict for OR in state 30 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 31 resolved as shift
WARNING: shift/reduce conflict for CALL in state 31 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 31 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 31 resolved as shift
WARNING: shift/reduce conflict for NAME in state 31 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 31 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 31 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 31 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 32 resolved as shift
WARNING: shift/reduce conflict for CALL in state 32 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 32 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 32 resolved as shift
WARNING: shift/reduce conflict for NAME in state 32 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 32 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 32 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 32 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 33 resolved as shift
WARNING: shift/reduce conflict for CALL in state 33 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 33 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 33 resolved as shift
WARNING: shift/reduce conflict for NAME in state 33 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 33 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 33 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for CALL in state 35 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 35 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 35 resolved as shift
WARNING: shift/reduce conflict for NAME in state 35 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 35 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 35 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for CALL in state 36 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 36 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 36 resolved as shift
WARNING: shift/reduce conflict for NAME in state 36 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 36 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 36 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for CALL in state 37 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 37 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 37 resolved as shift
WARNING: shift/reduce conflict for NAME in state 37 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 37 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 37 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for CALL in state 38 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 38 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 38 resolved as shift
WARNING: shift/reduce conflict for NAME in state 38 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 38 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 38 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for CALL in state 39 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 39 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 39 resolved as shift
WARNING: shift/reduce conflict for NAME in state 39 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 39 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 39 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 40 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 44 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 44 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 44 resolved as shift
WARNING: shift/reduce conflict for MINOR in state 44 resolved as shift
WARNING: shift/reduce conflict for MAJOR in state 44 resolved as shift
WARNING: shift/reduce conflict for NOT in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 54 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 54 resolved as shift
WARNING: shift/reduce conflict for MINOR in state 54 resolved as shift
WARNING: shift/reduce conflict for MAJOR in state 54 resolved as shift
WARNING: shift/reduce conflict for NOT in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 55 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 55 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 55 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 55 resolved as shift
WARNING: shift/reduce conflict for MINOR in state 55 resolved as shift
WARNING: shift/reduce conflict for MAJOR in state 55 resolved as shift
WARNING: shift/reduce conflict for NOT in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 56 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 56 resolved as shift
WARNING: shift/reduce conflict for MINOR in state 56 resolved as shift
WARNING: shift/reduce conflict for MAJOR in state 56 resolved as shift
WARNING: shift/reduce conflict for NOT in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 57 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 57 resolved as shift
WARNING: shift/reduce conflict for MINOR in state 57 resolved as shift
WARNING: shift/reduce conflict for MAJOR in state 57 resolved as shift
WARNING: shift/reduce conflict for NOT in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 58 resolved as shift
WARNING: shift/reduce conflict for CALL in state 58 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 58 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 58 resolved as shift
WARNING: shift/reduce conflict for NAME in state 58 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 58 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 58 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for CALL in state 59 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 59 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 59 resolved as shift
WARNING: shift/reduce conflict for NAME in state 59 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 59 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 59 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for CALL in state 60 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 60 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 60 resolved as shift
WARNING: shift/reduce conflict for NAME in state 60 resolved as shift
WARNING: shift/reduce conflict for DQUOTE in state 60 resolved as shift
WARNING: shift/reduce conflict for STRING_CAST in state 60 resolved as shift
WARNING: shift/reduce conflict for DRUG in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 73 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 73 resolved as shift
WARNING: shift/reduce conflict for MINOR in state 73 resolved as shift
WARNING: shift/reduce conflict for MAJOR in state 73 resolved as shift
WARNING: shift/reduce conflict for NOT in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 74 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 74 resolved as shift
WARNING: shift/reduce conflict for MINOR in state 74 resolved as shift
WARNING: shift/reduce conflict for MAJOR in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 75 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 75 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 75 resolved as shift
WARNING: shift/reduce conflict for MINOR in state 75 resolved as shift
WARNING: shift/reduce conflict for MAJOR in state 75 resolved as shift
WARNING: shift/reduce conflict for NOT in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (statement -> function_invoke)
WARNING: rejected rule (expression -> function_invoke) in state 7
WARNING: reduce/reduce conflict in state 67 resolved using rule (boolean_expression -> boolean_expression AND boolean_expression)
WARNING: rejected rule (expression -> boolean_expression) in state 67
WARNING: reduce/reduce conflict in state 68 resolved using rule (boolean_expression -> boolean_expression OR boolean_expression)
WARNING: rejected rule (expression -> boolean_expression) in state 68
